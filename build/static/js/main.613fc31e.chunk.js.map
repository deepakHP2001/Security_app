{"version":3,"sources":["actions/actionTypes.js","operations/symbols.js","reducers/statuses.js","reducers/auth.js","reducers/orders.js","reducers/RootReducer.js","store/store.js","operations/scroll/ScrollToTop.js","serviceWorker.js","components/core/PrivateRoute.js","operations/env.js","operations/api/api.js","common/apiAddresses.js","actions/authAction.js","components/headers/HeaderComponent.js","components/home/HomeComponent.js","operations/operations.js","operations/form-validation/formValidation.js","components/auth/LoginComponent.js","components/core/OTPFieldComponent/OTPFieldComponent.js","components/auth/OTPComponent.js","actions/ordersAction.js","components/auth/AuthComponent.js","components/headers/CommonHeaderComponent.js","components/order/CODComponent.js","components/order/OrderCardComponent.js","components/core/StateFilterComponent.js","components/core/PictureModeModal.js","components/core/LoaderComponent.js","components/core/ReasonListModal.js","components/order/OrdersComponent.js","operations/constants.js","components/core/PhotoViewerComponent.js","components/order/OrderDetailComponent.js","components/core/DropdownComponent.js","components/core/CounterInput.js","components/order/ProductCardComponent.js","components/order/OrderProductsComponent.js","components/order/ProductVerifyCardComponent.js","components/order/VerifyOrderComponent.js","components/order/PhoneListComponent.js","components/order/DeliveryOTPComponent.js","components/order/VerifyDeliveryComponent.js","components/order/InvoiceComponent.js","components/core/SuccesComponent.js","components/order/DeliverySuccessComponent.js","components/core/ConfirmationModal.js","components/core/IssueConfirmedModal.js","components/reasonList/index.js","components/reasonList/ReasonListPhotoView.js","components/AppComponent.js","index.js"],"names":["generateActions","actions","actionMap","i","action","concat","STATUS_BEGIN","STATUS_DONE","STATUS_FAIL","initStatus","status","errors","initialState","fromPairs","map","s","begin","state","name","merge","Object","defineProperty","symbols","success","fail","reducer","arguments","length","undefined","type","actionTypes","LOGIN_BEGIN","LOGIN_DONE","LOGIN_FAIL","SEND_OTP_BEGIN","SEND_OTP_DONE","SEND_OTP_FAIL","RESEND_OTP_BEGIN","RESEND_OTP_DONE","RESEND_OTP_FAIL","VERIFY_OTP_BEGIN","VERIFY_OTP_DONE","VERIFY_OTP_FAIL","LOGOUT_BEGIN","LOGOUT_DONE","ORDER_DETAIL_IMAGES_BEGIN","ORDER_DETAIL_IMAGES_DONE","ORDER_DETAIL_IMAGES_FAIL","GET_WAREHOUSES_BEGIN","GET_WAREHOUSES_DONE","GET_WAREHOUSES_FAIL","GET_ORDER_DETAILS_BEGIN","GET_ORDER_DETAILS_DONE","GET_ORDER_DETAILS_FAIL","GET_ORDER_PHONES_BEGIN","GET_ORDER_PHONES_DONE","GET_ORDER_PHONES_FAIL","ADD_REMARKS_BEGIN","ADD_REMARKS_DONE","ADD_REMARKS_FAIL","ADD_WAVE_BEGIN","ADD_WAVE_DONE","ADD_WAVE_FAIL","GET_ORDERS_BEGIN","GET_ORDERS_DONE","GET_ORDERS_FAIL","UPLOAD_IMAGES_BEGIN","UPLOAD_IMAGES_DONE","UPLOAD_IMAGES_FAIL","REUPLOAD_WAVE_BEGIN","REUPLOAD_WAVE_DONE","REUPLOAD_WAVE_FAIL","ORDER_STATUS_ACTION_BEGIN","ORDER_STATUS_ACTION_DONE","ORDER_STATUS_ACTION_FAIL","SEND_DELIVERY_OTP_BEGIN","SEND_DELIVERY_OTP_DONE","SEND_DELIVERY_OTP_FAIL","RESEND_DELIVERY_OTP_BEGIN","RESEND_DELIVERY_OTP_DONE","RESEND_DELIVERY_OTP_FAIL","VERIFY_DELIVERY_OTP_BEGIN","VERIFY_DELIVERY_OTP_DONE","VERIFY_DELIVERY_OTP_FAIL","GET_ALL_ISSUE_REASONS_BEGIN","GET_ALL_ISSUE_REASONS_DONE","GET_ALL_ISSUE_REASONS_FAIL","GET_DELIEVRY_ISSUE_REASONS_BEGIN","GET_DELIEVRY_ISSUE_REASONS_DONE","GET_DELIEVRY_ISSUE_REASONS_FAIL","GET_ORDER_PRODUCTS_BEGIN","GET_ORDER_PRODUCTS_DONE","GET_ORDER_PRODUCTS_FAIL","SAVE_PRODUCT_ISSUES_BEGIN","SAVE_PRODUCT_ISSUES_DONE","SAVE_PRODUCT_ISSUES_FAIL","DELETE_PRODUCT_ISSUES_BEGIN","DELETE_PRODUCT_ISSUES_DONE","DELETE_PRODUCT_ISSUES_FAIL","UPDATE_ORDER_BEGIN","UPDATE_ORDER_DONE","UPDATE_ORDER_FAIL","CANCEL_DELIVERY_ISSUE_BEGIN","CANCEL_DELIVERY_ISSUE_DONE","CANCEL_DELIVERY_ISSUE_FAIL","INVOICE_IMAGES_BEGIN","INVOICE_IMAGES_DONE","INVOICE_IMAGES_FAIL","user","auth","SIGNUP_DONE","isAuthenticated","token","window","localStorage","getItem","uploadedImages","reasonImages","invoiceImages","updatedProductIssue","orders","orderDetails","orderPhones","_objectSpread","productId","deletedProductId","deleteProductIssue","orderProducts","updatedProductId","reasons","deliveryReasons","images","id","toConsumableArray","push","ORDER_RESAON_DETAIL_IMAGES_DONE","result","createdOrders","REMOVE_DETAIL_IMAGES_DONE","RESET_ORDER_DETAIL_IMAGES_DONE","resetKeys","remarks","message","remark","userType","remarkBy","REMOVE_DETAIL_IMAGES_ORDER_DONE","uploadedImagesTemp","RootReducer","combineReducers","statuses","routing","routerReducer","createStoreWithMiddleware","applyMiddleware","thunk","createStore","ScrollToTop","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","prevProps","props","location","history","scrollTo","children","Component","withRouter","Boolean","hostname","match","connect","_ref","component","objectWithoutProperties","reverse","react_default","a","createElement","react_router","to","pathname","assign","from","env","development","urls","podHost","production","staging","devServer","apiEndpoint","process","REACT_APP_API_ENDPOINT","createAxios","headers","axios","create","baseURL","withCredentials","paramsSerializer","qs","stringify","requestInterceptor","config","decoded","startsWith","jwtDecode","_unused","moment","unix","exp","add","Promise","resolve","removeItem","alert","href","api","instance","interceptors","request","use","ApiAddresses","DefaultParams","getOrders","daNumber","orderNumber","targetDeliveryDate","format","waveId","withImagesOnly","openWavesOnly","warehouseId","codOnly","withQuantityIssues","sendOtp","payload","dispatch","countryCode","post","then","_ref4","data","catch","err","path","logoutAction","HeaderComponent","toggleSideBar","menuEle","document","getElementById","classList","remove","_this$props","logoutStatus","_this2","_this$props2","Fragment","className","react_router_dom","src","alt","react_fontawesome_index_es","icon","onClick","logout","validPhone","phone","test","isRequired","getBase64","file","reject","reader","FileReader","readAsDataURL","onload","onerror","error","validate_phoneNumber","validateLogin","values","phoneNumber","isValidated","fields","validateRegisterOTP","otp","isNaN","LoginComponent","_this","call","componentDidUpdate","sendOtpStatus","sendOtpDone","login","validations","allValidated","field","setState","prevState","LoginComponent_objectSpread","validateThisField","_this3","errList","_ref2","e","_this4","preventDefault","loginValidatedData","_this5","onSubmit","onLogin","Input_default","label","Check_default","iconColor","onBlur","beginValidation","errorMsg","onChange","handleChange","sendOtpError","bindActionCreators","OTPFieldComponent","focusPrevious","index","digits","otpTextInput","focus","onInputFieldClick","fieldValue","join","toString","enableIndex","onFieldClick","event","node","contains","target","validateOTP","showError","handleKeyPress","which","Array","fill","addEventListener","removeEventListener","_this$state","inputFields","_loop","onKeyDown","onFocus","ref","autoFocus","autoComplete","renderDigits","inputField","OTPComponent","resetSetTimeout","OTPComponent_objectSpread","onCall","otpFields","setTimeout","resendOtp","otpValidatedData","otpVerifyAction","_this6","verifyOtpStatus","verifyOtpError","resendOtpStatus","resendOtpError","onSubmitOTP","core_OTPFieldComponent_OTPFieldComponent","backToLogin","LeftTriangle_default","authorization","setItem","JSON","verifyOtp","setOrderDetailImages","imageType","resetOrderDetailImagesStatus","ORDER_RESAON_DETAIL_IMAGES_BEGIN","resetOrderDetailImages","removeImageFromOrder","removeImage","imagesModified","filter","ele","currIndex","getOrderDetails","get","response","getOrderPhones","getOrderProducts","_ref3","params","currentDateTime","queryParams","queryString","defaultParams","requestParams","keys","substring","makeQueryParams","getAllIssueReasons","_ref5","getAllDeliveryIssueReasons","_ref6","addRemarks","orderId","_ref7","saveProductIssues","issueId","urlConfig","put","_ref8","deleteProductIssues","delete","_ref9","updateOrder","_ref10","resetGetOrders","RESET_GET_ORDERS_DONE","addWave","_ref11","reUploadWave","_ref12","uploadImages","_ref13","verifyDeliveryOtp","_ref14","resendDeliveryOtp","_ref15","sendDeliveryOtp","_ref16","cancelOrderDelivery","_ref17","resetCancelDeliverySatuses","sendEvent","entityType","_ref18","CommonHeaderComponent","enableBack","Back_default","goBack","title","routeId","CODComponent","totalCash","parseInt","cash","snapshot","updateOrderStatus","headers_CommonHeaderComponent","handleCashCollectedClick","updateOrderError","OrderCardComponent","hasImages","phones","entityId","eventName","order","getVerifiedBtn","outletName","getPhoneNumber","outletAddress","slotTime","fetchedStatus","sendToDetail","openReasonListModal","StateFilterComponent","filterId","Icons","val","handelFilterChange","clearFilter","PictureModeModal","imagesUploaded","click","files","imgResult","hasSameRoute","closePictureModeModal","setImages","redirectedURL","isOpen","hasNotWrapper","handleImageInputClick","default","uploadedImagesRedirect","reasonImagesRedirect","invoiceImagesRedirect","hidden","accept","capture","handleSelectedDefaultImage","handleSelectedImage","modalBody","multiple","orderDetailImages","LoaderComponent","ReasonListModal","subtype","goToReasonPage","core_LoaderComponent","closeReasonListModal","renderReasonList","getDeliveryIssueReasons","OrdersComponent","setSearchVal","searchVal","openPictureModeModal","filterValue","selectedId","selectedOrder","statusParams","withDeliveryIssues","OrdersComponent_objectSpread","stopPropagation","handleSearchFilter","getOrdersStatus","core_PictureModeModal","core_ReasonListModal","route","placeholder","Search_default","core_StateFilterComponent","sort","b","order_OrderCardComponent","getOrdersError","ORDER_STATUS","PhotoViewer","photos","removeCross","showPhotoViewer","uploadImagesStatus","_useState","useState","_useState2","slicedToArray","currentImage","setCurrentImage","_useState3","_useState4","viewerIsOpen","setViewerIsOpen","_useState5","_useState6","setImagesState","reduce","acc","imageUrl","URL","createObjectURL","style","backgroundImage","react_images_es","onClose","currentIndex","views","x","PhotoViewerComponent_objectSpread","srcset","PhotoMainViewer","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","url","mainClassName","OrderDetailComponent","position","longitude","latitude","noPhonesData","showCommentAddBtn","remarkStatus","getPhonesStatus","orderDetailImagesStatus","blur","cancelRemark","sendToOrder","FormData","append","paymentMode","uploadImagesError","handleSelectedImageChange","orderDetail","trim","onMouseDown","addRemark","otpVerified","handleDeliverClick","PhotoViewerComponent_PhotoViewer","parentClass","showRemoveImage","imaegs","handleCommentValue","toggleCommentAddBtn","Call_default","getPhonesError","DropdownComponent","listenEvent","matches","showMenu","selectedFilter","sendValue","handleClick","menu","defaultParam","primary","handleSelect","CounterInput","countValue","defaultValue","getValue","handleCounter","setCountValue","setBlurCountValue","max","ProductCardComponent","quantityValue","collapsed","issue","reasonWarning","disableCardTrack","currentCardId","hasIssueId","imageWarning","finalUpdatedValue","product","quantityDispatched","ProductCardComponent_objectSpread","reasonId","quantityDelivered","parseFloat","handleIssueChange","issueReason","find","reason","_this7","_this8","saveProductIssuesStatus","deleteProductIssuesStatus","closeCard","unshift","clearAddPhotos","openOnly","setIsOpen","setClose","_this9","toggleCard","flag","rules","indexOf","formData","setIssue","deleteIssue","_this10","staticCard","shadowClass","allReset","skuName","handleIssueSubmit","measurementUnit","quantityOrdered","core_CounterInput","min","setQuantityValue","setBlurQunatityValue","core_DropdownComponent","param","handleReasonSelect","PhotoViewerComponent_PhotoMainViewer","saveProductIssuesError","deleteProductIssuesError","OrderProductsComponent","orderProductId","issues","issueItems","products","hasNoSearchResult","totalItems","toggleDownWrapper","showInvoiceModal","tempProducts","toLowerCase","includes","getAllIssueReasonsStatus","getOrderProductsStatus","forEach","order_ProductCardComponent","handleOnSubmit","getAllIssueReasonsError","getOrderProductError","ProductVerifyCardComponent","qtyDelivered","netGst","pricePerUnit","gstRate","totalPrice","unit","VerifyOrderComponent","originalPrice","updatedPrice","totalOriginalPrice","totalUpdatedPrice","netGstOrdered","grossPriceOrdered","netGstUpdated","grossPriceUpdated","order_ProductVerifyCardComponent","handleVerifyCLick","PhoneListComponent","selectedPhone","prodEnv","sendDeliveryOtpStatus","checked","handleOptionChange","handlePhoneClick","sendDeliveryOtpError","DeliveryOTPComponent","validationFailed","DeliveryOTPComponent_objectSpread","voice","replace","resendDeliveryOtpStatus","hasSentOTP","backToPhoneSelect","resendDeliveryOtpError","VerifyDeliveryComponent","phoneNo","number","order_DeliveryOTPComponent","order_PhoneListComponent","InvoiceComponent","uploadInvocies","pushToVerify","SuccessComponent","xmlns","width","height","viewBox","d","cx","cy","r","stroke","strokeWidth","strokeLinecap","points","DeliverySuccessComponent","SuccesComponent","ConfirmationModal","openLoader","closeConfirmationModal","IssueConfirmedModal","storeCloseReason","storeNotFoundReason","otherReason","ReasonList","reasonsList","currentOrder","reasonListModel","contactMessage","photoMessage","cancelMessage","commentMessage","openDoneModal","openConfirmationModal","cancelDeliveryIssueStatus","reasonType","dangerouslySetInnerHTML","__html","core_ConfirmationModal","cancelDeliveryIssueError","core_IssueConfirmedModal","typeEle","renderContactCard","cancelDeliveryIssue","ReasonListPhotoView","library","faBars","faPlus","faMinus","faEdit","faCompass","faUser","faTag","faSearch","faPhone","faScroll","faTimes","faChevronCircleLeft","faChevronCircleRight","faCheck","faBan","faChevronRight","faChevronDown","faChevronUp","faChevronLeft","faTrash","faBell","faFilter","faCamera","faImages","faAngleDown","faSpinner","AppComponent","offline","navigator","onLine","setOfflineStatus","componentDidMount","componentWillUnmount","core_PrivateRoute","exact","render","order_OrdersComponent","order_OrderDetailComponent","order_OrderProductsComponent","order_VerifyOrderComponent","order_InvoiceComponent","order_VerifyDeliveryComponent","order_CODComponent","reasonList","reasonList_ReasonListPhotoView","order_DeliverySuccessComponent","auth_OTPComponent","parse","store","es","basename","scroll_ScrollToTop","dist_src","components_AppComponent","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.613fc31e.chunk.js","sourcesContent":["const generateActions = function(actions) {\n  const actionMap = {};\n  for (const i in actions) {\n    const action = actions[i];\n    actionMap[action] = action;\n    actionMap[`${action}_BEGIN`] = `${action}_BEGIN`;\n    actionMap[`${action}_DONE`] = `${action}_DONE`;\n    actionMap[`${action}_FAIL`] = `${action}_FAIL`;\n  }\n  return actionMap;\n};\n\nexport default generateActions([\n  'LOGIN',\n  'LOGOUT',\n  'SEND_OTP',\n  'VERIFY_OTP',\n  'RESEND_OTP',\n  'ORDER_DETAIL_IMAGES',\n  'REMOVE_DETAIL_IMAGES',\n  'GET_WAREHOUSES',\n  'SET_WAREHOUSE',\n  'GET_ORDER_DETAILS',\n  'ADD_REMARKS',\n  'UPLOAD_IMAGES',\n  'ADD_WAVE',\n  'GET_ORDERS',\n  'REUPLOAD_WAVE',\n  'ORDER_STATUS_ACTION',\n  'RESET_GET_ORDERS',\n  'RESET_ORDER_DETAIL_IMAGES',\n  'REMOVE_DETAIL_IMAGES_ORDER',\n  'GET_ORDER_PHONES',\n  'SEND_DELIVERY_OTP',\n  'VERIFY_DELIVERY_OTP',\n  'RESEND_DELIVERY_OTP',\n  'GET_ALL_ISSUE_REASONS',\n  'GET_ORDER_PRODUCTS',\n  'SAVE_PRODUCT_ISSUES',\n  'UPDATE_ORDER',\n  'DELETE_PRODUCT_ISSUES',\n  'GET_DELIEVRY_ISSUE_REASONS',\n  'ORDER_RESAON_DETAIL_IMAGES',\n  'CANCEL_DELIVERY_ISSUE',\n  'INVOICE_IMAGES'\n]);\n","export const STATUS_INIT = 0;\nexport const STATUS_BEGIN = 1;\nexport const STATUS_DONE = 2;\nexport const STATUS_FAIL = 3;","import { fromPairs, map, mergeDeepRight as merge } from 'ramda';\n\nimport actionTypes from '../actions/actionTypes';\nimport * as symbols from '../operations/symbols';\n\nconst initStatus = {\n  status: symbols.STATUS_INIT,\n  errors: null,\n};\nconst initialState = fromPairs(map((s) => [s, initStatus], [\n  'login',\n  'logout',\n  'orderDetailImages',\n  'sendOtp',\n  'resendOtp',\n  'verifyOtp',\n  'getWarehouses',\n  'getOrderDetails',\n  'addRemarks',\n  'uploadImages',\n  'addWave',\n  'getOrders',\n  'reUploadWave',\n  'orderStatusAction',\n  'getOrderPhones',\n  'sendDeliveryOtp',\n  'resendDeliveryOtp',\n  'verifyDeliveryOtp',\n  'getAllIssueReasons',\n  'getOrderProducts',\n  'saveProductIssues',\n  'updateOrder',\n  'deleteProductIssues',\n  'getDeliveryIssueReasons',\n  'cancelDeliveryIssue',\n  'invoiceImageUplaod'\n]));\n\nfunction begin(state, name) {\n  return merge(state, {\n    [name]: {\n      status: symbols.STATUS_BEGIN,\n      errors: null,\n    }\n  });\n}\n\nfunction success(state, name) {\n  return merge(state, {\n    [name]: {\n      status: symbols.STATUS_DONE,\n      errors: null,\n    }\n  });\n}\n\nfunction fail(state, name, errors) {\n  return merge(state, {\n    [name]: {\n      status: symbols.STATUS_FAIL,\n      errors: errors,\n    }\n  });\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN_BEGIN:\n      return begin(state, 'login');\n    case actionTypes.LOGIN_DONE:\n      return success(state, 'login');\n    case actionTypes.LOGIN_FAIL:\n      return fail(state, 'login', action.errors);\n\n    case actionTypes.SEND_OTP_BEGIN:\n      return begin(state, 'sendOtp');\n    case actionTypes.SEND_OTP_DONE:\n      return success(state, 'sendOtp');\n    case actionTypes.SEND_OTP_FAIL:\n      return fail(state, 'sendOtp', action.errors);\n\n    case actionTypes.RESEND_OTP_BEGIN:\n      return begin(state, 'resendOtp');\n    case actionTypes.RESEND_OTP_DONE:\n      return success(state, 'resendOtp');\n    case actionTypes.RESEND_OTP_FAIL:\n      return fail(state, 'resendOtp', action.errors);\n\n    case actionTypes.VERIFY_OTP_BEGIN:\n      return begin(state, 'verifyOtp');\n    case actionTypes.VERIFY_OTP_DONE:\n      return success(state, 'verifyOtp');\n    case actionTypes.VERIFY_OTP_FAIL:\n      return fail(state, 'verifyOtp', action.errors);\n\n    case actionTypes.LOGOUT_BEGIN:\n      return begin(state, 'logout');\n    case actionTypes.LOGOUT_DONE:\n      return success(state, 'logout');\n\n    case actionTypes.ORDER_DETAIL_IMAGES_BEGIN:\n      return begin(state, 'orderDetailImages');\n    case actionTypes.ORDER_DETAIL_IMAGES_DONE:\n      return success(state, 'orderDetailImages');\n    case actionTypes.ORDER_DETAIL_IMAGES_FAIL:\n      return fail(state, 'orderDetailImages', action.errors);\n\n    case actionTypes.GET_WAREHOUSES_BEGIN:\n      return begin(state, 'getWarehouses');\n    case actionTypes.GET_WAREHOUSES_DONE:\n      return success(state, 'getWarehouses');\n    case actionTypes.GET_WAREHOUSES_FAIL:\n      return fail(state, 'getWarehouses', action.errors);\n\n    case actionTypes.GET_ORDER_DETAILS_BEGIN:\n      return begin(state, 'getOrderDetails');\n    case actionTypes.GET_ORDER_DETAILS_DONE:\n      return success(state, 'getOrderDetails');\n    case actionTypes.GET_ORDER_DETAILS_FAIL:\n      return fail(state, 'getOrderDetails', action.errors);\n\n    case actionTypes.GET_ORDER_PHONES_BEGIN:\n      return begin(state, 'getOrderPhones');\n    case actionTypes.GET_ORDER_PHONES_DONE:\n      return success(state, 'getOrderPhones');\n    case actionTypes.GET_ORDER_PHONES_FAIL:\n      return fail(state, 'getOrderPhones', action.errors);\n\n    case actionTypes.ADD_REMARKS_BEGIN:\n      return begin(state, 'addRemarks');\n    case actionTypes.ADD_REMARKS_DONE:\n      return success(state, 'addRemarks');\n    case actionTypes.ADD_REMARKS_FAIL:\n      return fail(state, 'addRemarks', action.errors);\n\n    case actionTypes.ADD_WAVE_BEGIN:\n      return begin(state, 'addWave');\n    case actionTypes.ADD_WAVE_DONE:\n      return success(state, 'addWave');\n    case actionTypes.ADD_WAVE_FAIL:\n      return fail(state, 'addWave', action.errors);\n\n    case actionTypes.GET_ORDERS_BEGIN:\n      return begin(state, 'getOrders');\n    case actionTypes.GET_ORDERS_DONE:\n      return success(state, 'getOrders');\n    case actionTypes.GET_ORDERS_FAIL:\n      return fail(state, 'getOrders', action.errors);\n\n    case actionTypes.UPLOAD_IMAGES_BEGIN:\n      return begin(state, 'uploadImages');\n    case actionTypes.UPLOAD_IMAGES_DONE:\n      return success(state, 'uploadImages');\n    case actionTypes.UPLOAD_IMAGES_FAIL:\n      return fail(state, 'uploadImages', action.errors);\n\n    case actionTypes.REUPLOAD_WAVE_BEGIN:\n      return begin(state, 'reUploadWave');\n    case actionTypes.REUPLOAD_WAVE_DONE:\n      return success(state, 'reUploadWave');\n    case actionTypes.REUPLOAD_WAVE_FAIL:\n      return fail(state, 'reUploadWave', action.errors);\n\n    case actionTypes.ORDER_STATUS_ACTION_BEGIN:\n      return begin(state, 'orderStatusAction');\n    case actionTypes.ORDER_STATUS_ACTION_DONE:\n      return success(state, 'orderStatusAction');\n    case actionTypes.ORDER_STATUS_ACTION_FAIL:\n      return fail(state, 'orderStatusAction', action.errors);\n\n    case actionTypes.SEND_DELIVERY_OTP_BEGIN:\n      return begin(state, 'sendDeliveryOtp');\n    case actionTypes.SEND_DELIVERY_OTP_DONE:\n      return success(state, 'sendDeliveryOtp');\n    case actionTypes.SEND_DELIVERY_OTP_FAIL:\n      return fail(state, 'sendDeliveryOtp', action.errors);\n\n    case actionTypes.RESEND_DELIVERY_OTP_BEGIN:\n      return begin(state, 'resendDeliveryOtp');\n    case actionTypes.RESEND_DELIVERY_OTP_DONE:\n      return success(state, 'resendDeliveryOtp');\n    case actionTypes.RESEND_DELIVERY_OTP_FAIL:\n      return fail(state, 'resendDeliveryOtp', action.errors);\n\n    case actionTypes.VERIFY_DELIVERY_OTP_BEGIN:\n      return begin(state, 'verifyDeliveryOtp');\n    case actionTypes.VERIFY_DELIVERY_OTP_DONE:\n      return success(state, 'verifyDeliveryOtp');\n    case actionTypes.VERIFY_DELIVERY_OTP_FAIL:\n      return fail(state, 'verifyDeliveryOtp', action.errors);\n\n    case actionTypes.GET_ALL_ISSUE_REASONS_BEGIN:\n      return begin(state, 'getAllIssueReasons');\n    case actionTypes.GET_ALL_ISSUE_REASONS_DONE:\n      return success(state, 'getAllIssueReasons');\n    case actionTypes.GET_ALL_ISSUE_REASONS_FAIL:\n      return fail(state, 'getAllIssueReasons', action.errors);\n\n    case actionTypes.GET_DELIEVRY_ISSUE_REASONS_BEGIN:\n      return begin(state, 'getDeliveryIssueReasons');\n    case actionTypes.GET_DELIEVRY_ISSUE_REASONS_DONE:\n      return success(state, 'getDeliveryIssueReasons');\n    case actionTypes.GET_DELIEVRY_ISSUE_REASONS_FAIL:\n      return fail(state, 'getDeliveryIssueReasons', action.errors);\n\n    case actionTypes.GET_ORDER_PRODUCTS_BEGIN:\n      return begin(state, 'getOrderProducts');\n    case actionTypes.GET_ORDER_PRODUCTS_DONE:\n      return success(state, 'getOrderProducts');\n    case actionTypes.GET_ORDER_PRODUCTS_FAIL:\n      return fail(state, 'getOrderProducts', action.errors);\n\n    case actionTypes.SAVE_PRODUCT_ISSUES_BEGIN:\n      return begin(state, 'saveProductIssues');\n    case actionTypes.SAVE_PRODUCT_ISSUES_DONE:\n      return success(state, 'saveProductIssues');\n    case actionTypes.SAVE_PRODUCT_ISSUES_FAIL:\n      return fail(state, 'saveProductIssues', action.errors);\n\n    case actionTypes.DELETE_PRODUCT_ISSUES_BEGIN:\n      return begin(state, 'deleteProductIssues');\n    case actionTypes.DELETE_PRODUCT_ISSUES_DONE:\n      return success(state, 'deleteProductIssues');\n    case actionTypes.DELETE_PRODUCT_ISSUES_FAIL:\n      return fail(state, 'deleteProductIssues', action.errors);\n\n\n    case actionTypes.UPDATE_ORDER_BEGIN:\n      return begin(state, 'updateOrder');\n    case actionTypes.UPDATE_ORDER_DONE:\n      return success(state, 'updateOrder');\n    case actionTypes.UPDATE_ORDER_FAIL:\n      return fail(state, 'updateOrder', action.errors);\n\n    case actionTypes.CANCEL_DELIVERY_ISSUE_BEGIN:\n      return begin(state, 'cancelDeliveryIssue');\n    case actionTypes.CANCEL_DELIVERY_ISSUE_DONE:\n      return success(state, 'cancelDeliveryIssue');\n    case actionTypes.CANCEL_DELIVERY_ISSUE_FAIL:\n      return fail(state, 'cancelDeliveryIssue', action.errors);\n\n    case actionTypes.INVOICE_IMAGES_BEGIN:\n      return begin(state, 'invoiceImageUplaod');\n    case actionTypes.INVOICE_IMAGES_DONE:\n      return success(state, 'invoiceImageUplaod');\n    case actionTypes.INVOICE_IMAGES_FAIL:\n      return fail(state, 'invoiceImageUplaod', action.errors);\n\n\n      \n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { mergeDeepRight as merge } from 'ramda';\n\nimport actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  user: null,\n};\n\nfunction auth(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.VERIFY_OTP_DONE:\n      return merge(state, {\n        user: action.user,\n        isAuthenticated: true,\n        token: window.localStorage.getItem('token')\n      });\n\n    case actionTypes.SIGNUP_DONE:\n      return merge(state, {\n        user: action.user,\n        isAuthenticated: true,\n        token: window.localStorage.getItem('token')\n      });\n\n    case actionTypes.LOGOUT_DONE:\n      return merge(state, {\n        user: null,\n        isAuthenticated: false,\n        token: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { mergeDeepRight as merge } from 'ramda';\n\nimport actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  uploadedImages: {},\n  reasonImages: {},\n  invoiceImages: {},\n  updatedProductIssue: {}\n};\n\nfunction orders(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_ORDER_DETAILS_DONE:\n      return merge(state, { orderDetails: action.orderDetails });\n\n    case actionTypes.GET_ORDER_PHONES_DONE:\n      return merge(state, { orderPhones: action.orderPhones });\n\n    case actionTypes.SAVE_PRODUCT_ISSUES_DONE:\n      let updatedProductIssue = { ...state.updatedProductIssue };\n      updatedProductIssue[action.productId] = action.updatedProductIssue;\n      return merge(state, { updatedProductIssue, deletedProductId: null });\n\n    case actionTypes.DELETE_PRODUCT_ISSUES_DONE:\n      let deleteProductIssue = { ...state.updatedProductIssue };\n      deleteProductIssue[action.productId] = action.updatedProductIssue;\n      return merge(state, { updatedProductIssue: deleteProductIssue, deletedProductId: action.productId });\n\n    case actionTypes.GET_ORDER_PRODUCTS_DONE:\n      return merge(state, { orderProducts: action.orderProducts, updatedProductId: action.productId });\n\n    case actionTypes.GET_ALL_ISSUE_REASONS_DONE:\n      return merge(state, { reasons: action.reasons });\n\n    case actionTypes.GET_DELIEVRY_ISSUE_REASONS_DONE:\n      return merge(state, { deliveryReasons: action.deliveryReasons });\n\n    case actionTypes.ORDER_DETAIL_IMAGES_DONE:\n      let images = [];\n      if (state.uploadedImages[action.id]) {\n        images = [...state.uploadedImages[action.id]]\n      } else {\n\n      }\n\n      if (action.images.length == 1) {\n        images.push(action.images[0])\n      } else {\n        for (let i = 0; i < action.images.length; i++) {\n          images.push(action.images[i])\n        }\n      }\n\n      return merge(state, {\n        uploadedImages: {\n          [action.id]: images\n        }\n      });\n\n    case actionTypes.ORDER_RESAON_DETAIL_IMAGES_DONE:\n      let reasonImages = [];\n      if (state.reasonImages[action.id]) {\n        reasonImages = [...state.reasonImages[action.id]]\n      }\n\n\n      if (action.images.length == 1) {\n        reasonImages.push(action.images[0])\n      } else {\n        for (let i = 0; i < action.images.length; i++) {\n          reasonImages.push(action.images[i])\n        }\n      }\n\n      return merge(state, {\n        reasonImages: {\n          [action.id]: reasonImages\n        }\n      });\n\n    case actionTypes.INVOICE_IMAGES_DONE:\n      let invoiceImages = [];\n      if (state.invoiceImages[action.id]) {\n        invoiceImages = [...state.invoiceImages[action.id]]\n      } \n\n\n      if (action.images.length == 1) {\n        invoiceImages.push(action.images[0])\n      } else {\n        for (let i = 0; i < action.images.length; i++) {\n          invoiceImages.push(action.images[i])\n        }\n      }\n\n      return merge(state, {\n        invoiceImages: {\n          [action.id]: invoiceImages\n        }\n      });\n\n    case actionTypes.GET_ORDERS_DONE:\n      let result = action.orders;\n\n      let createdOrders = { ...state };\n      createdOrders.orders = result;\n      return { ...createdOrders };\n\n    case actionTypes.REMOVE_DETAIL_IMAGES_DONE:\n      let uploadedImages = { ...state.uploadedImages };\n      uploadedImages[action.id] = action.images;\n      return merge(state, { uploadedImages });\n\n    case actionTypes.RESET_ORDER_DETAIL_IMAGES_DONE:\n      let resetKeys = { ...state };\n      resetKeys.uploadedImages = {};\n      resetKeys.reasonImages = {}\n      resetKeys.invoiceImages = {}\n      return resetKeys;\n\n    case actionTypes.ADD_REMARKS_DONE:\n      let orderDetails = { ...state };\n      orderDetails.orderDetails.remarks.push({\n        message: action.remark.remark,\n        userType: action.remark.remarkBy,\n      })\n      return merge(state, { orderDetails });\n\n    case actionTypes.REMOVE_DETAIL_IMAGES_ORDER_DONE:\n\n      let uploadedImagesTemp = { ...state };\n      delete uploadedImagesTemp.uploadedImages[action.id]\n\n      return uploadedImagesTemp;\n\n    default:\n      return state;\n  }\n};\n\nexport default orders;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport statuses from './statuses';\nimport auth from './auth';\nimport orders from './orders';\n\nconst RootReducer = combineReducers({\n\tauth,\n\tstatuses,\n\torders,\n\trouting: routerReducer \n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport RootReducer from \"../reducers/RootReducer\";\nimport thunk from 'redux-thunk';\n\n/* Using thunk let's us return functions as actions\n * from action creators instead of JSON objects.\n * This enables us to delay dispatching actions.\n */\n\nconst createStoreWithMiddleware = applyMiddleware(\n    thunk\n)(createStore);\n\nexport default function configureStore(initialState) {\n\t// enabling dev loading debuggers \n    if (process.env.NODE_ENV === \"development\")\n        return createStoreWithMiddleware(RootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n    else\n        return createStoreWithMiddleware(RootReducer, initialState);\n}\n","import { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nexport class ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location && this.props.history.action === \"PUSH\") {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n  // For authenticated user\n  if (props.auth.isAuthenticated) {\n    if (props.reverse) {\n      return <Redirect  to = {\n        {\n          pathname: '/orders'\n        }\n      } />\n    } else {\n      return <Route { ...props } component = { Component } />\n    }\n  } \n  // For non signed user\n  else {\n    if (props.reverse) {\n      return <Route { ...props } component = { Component } />\n    } else {\n      return <Redirect to = {\n        {\n          pathname: '/auth',\n          state: { from: props.location }\n        }\n      } />\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(PrivateRoute));\n","const env = {\n  development: {\n    urls: {\n      podHost: 'http://localhost:7777'\n    }\n  },\n  production: {\n    urls: {\n      podHost: 'https://pod.hyperpure.com/'\n    }\n  },\n  staging: {\n    urls: {\n      podHost: 'https://staging.hyperpure.com/'\n    }\n  },\n  devServer: {\n    urls: {\n      podHost: 'https://devpod.hyperpure.com/'\n    }\n  }\n};\n\nlet apiEndpoint = ''\nif (process.env.REACT_APP_API_ENDPOINT) {\n  apiEndpoint = env[process.env.REACT_APP_API_ENDPOINT];\n} else {\n  apiEndpoint = env[process.env.NODE_ENV];\n}\n\nexport default apiEndpoint;\n","import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { startsWith } from 'ramda';\nimport qs from 'query-string';\nimport moment from 'moment';\n\nimport env from '../env';\n\nfunction getCookie(name) {\n  return (document.cookie.match(`(^|; )${name}=([^;]*)`) || 0)[2];\n}\n\nfunction getAuthHeader() {\n  return `${window.localStorage.getItem('token')}`;\n}\n\nfunction createAxios(auth) {\n\n  const headers = {};\n\n  if (auth) {\n    headers['Authorization'] = getAuthHeader();\n    headers['X-Client'] = 'da';\n  }\n  // headers['Accept-Encoding']='gzip';\n\n  return axios.create({\n    baseURL: `${env.urls.podHost}/`,\n    withCredentials: true,\n    headers,\n    paramsSerializer: qs.stringify,\n  });\n}\n\nfunction requestInterceptor(config) {\n  const token = window.localStorage.getItem('token');\n\n  // TODO: need a better way to handle token refresh\n  if (startsWith('/login', window.location.pathname)) {\n    return config;\n  }\n\n  let decoded;\n  try {\n    decoded = jwtDecode(token);\n  } catch {\n    return config;\n  }\n  // Token has expired\n  if (moment.unix(decoded.exp) < (moment().add(5, 'seconds'))) {\n    return new Promise((resolve) => {\n      // createAxios().post('auth/refresh_token/')\n      //   .then(({data}) => {  // Token refresh successful\n      //     window.localStorage.setItem('token', data.token);\n      //     config.headers.Authorization = getAuthHeader();\n      //     resolve(config);\n      //   })\n      //   .catch(err => {  // Session expired; user needs to login again\n      //     window.location = '/login';\n      //   });\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('user');\n      alert('Session Expired! Please login again');\n      window.location.href = '/';\n    });\n  }\n  return config;\n};\n\nexport default (auth = true) => {\n  const instance = createAxios(auth);\n  if (auth) {\n    instance.interceptors.request.use(requestInterceptor);\n  }\n  return instance;\n};\n","import moment from 'moment';\n\nexport const ApiAddresses = {\n  signupApi: '/api/users/',\n  sendOtp: '/api/otp',\n  verifyOtp: '/api/otp/validate',\n  resendOtp: '/api/otp/retry/',\n  getWarehouses: '/api/warehouses/',\n  getOrderDetails: '/api/orders/',\n  addRemarks: '/api/orders/',\n  addImages: '/api/pod',\n  addWave: '/api/orders/',\n  getOrders: '/api/orders',\n  getAllIssueReasons: '/api/reasons/',\n  // setOrdersStatusAction: '/api/podAction/',\n  getOrderPhones: '/api/orders/',\n  getOrderProducts: '/api/orders/',\n  sendDeliveryOtp: '/api/delivery/otp',\n  verifyDeliveryOtp: '/api/delivery/otp/validate',\n  saveProductIssues: '/api/orders/',\n  updateOrder: '/api/orders/',\n  deliveryIssue: 'api/orders/',\n  events: '/api/events'\n}\n\nexport const DefaultParams = {\n  getOrders: {\n    daNumber: '',\n    orderNumber: '',\n    status: 'all',\n    targetDeliveryDate: moment().format('DD-MM-YYYY') ,\n    waveId: 0,\n    withImagesOnly: 'false',\n    openWavesOnly: 'true',\n    warehouseId: 0,\n    codOnly: 'false',\n    withQuantityIssues: 'all'\n  }\n};","import { path } from 'ramda';\nimport actionTypes from './actionTypes';\nimport api from '../operations/api/api';\nimport { ApiAddresses } from '../common/apiAddresses';\n\nexport const otpVerifyAction = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.VERIFY_OTP_BEGIN });\n    payload.countryCode = '91';\n    api(false)\n      .post(ApiAddresses.verifyOtp, payload)\n      .then(({ data, headers }) => {\n        if (headers) {\n          let token = headers.authorization;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user', JSON.stringify({ phone: payload.phoneNumber }));\n        }\n        dispatch({ type: actionTypes.VERIFY_OTP_DONE, user: { phone: payload.phoneNumber } });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.VERIFY_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\n\nexport const resendOtp = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.RESEND_OTP_BEGIN });\n    payload.countryCode = '91';\n    api(false)\n      .post(ApiAddresses.sendOtp, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.RESEND_OTP_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.RESEND_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const signupAction = function(payload, func) {\n  return dispatch => {\n    dispatch({ type: actionTypes.SIGNUP_BEGIN });\n\n    api(false)\n      .post(ApiAddresses.signupApi, payload)\n      .then(({ data, headers }) => {\n        if (headers) {\n          let token = headers.authorization;\n          localStorage.setItem('token', token);\n          localStorage.setItem('user', JSON.stringify(data.response));\n        }\n        dispatch({ type: actionTypes.SIGNUP_DONE, user: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.SIGNUP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const sendOtp = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.SEND_OTP_BEGIN });\n    payload.countryCode = '91';\n    api(false)\n      .post(ApiAddresses.sendOtp, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.SEND_OTP_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.SEND_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const loginTempAction = function(id, user) {\n  return dispatch => {\n    dispatch({ type: actionTypes.LOGIN_BEGIN });\n\n    localStorage.setItem('token', id);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    dispatch({ type: actionTypes.LOGIN_DONE, user: user });\n\n    dispatch({\n      type: actionTypes.LOGIN_FAIL\n    });\n  };\n};\n\nexport const logoutAction = function() {\n  return dispatch => {\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('user');\n    dispatch({ type: actionTypes.LOGOUT_DONE });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport * as symbols from '../../operations/symbols';\nimport './header.scss';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { logoutAction } from '../../actions/authAction';\n\nclass HeaderComponent extends Component {\n\n  toggleSideBar = (action) => {\n    let menuEle = document.getElementById('sidebar');\n    if (action == 'open')\n      menuEle.classList.add('drag-menu-visible');\n    else\n      menuEle.classList.remove('drag-menu-visible');\n  }\n\n  componentDidUpdate(prevProps) {\n    const { history, logoutStatus } = this.props;\n\n    if (logoutStatus !== prevProps.logoutStatus && logoutStatus === symbols.STATUS_DONE) {\n      history.push('/auth');\n    }\n  }\n\n  render() {\n    const { auth, logoutAction } = this.props;\n    return (\n      <React.Fragment>\n        <header id=\"header\">\n          <ul className=\"header-list\">\n            <li className=\" nav-menu__logo left nav-menu__logo--desktop\">\n              <NavLink to=\"/\"><img src=\"../images/hyperpure-logo-top.svg\" alt=\"logo\" /></NavLink>\n            </li>\n            <li className=\"mobile-only bars left\"><FontAwesomeIcon icon=\"bars\" onClick={() => this.toggleSideBar('open')}/></li>\n            {\n              auth.isAuthenticated ? \n              <React.Fragment>\n                <li className=\"list-ele pointer green-link\"><span className=\"gray-text\">Hi</span> {auth.user && auth.user.name}</li>\n                <li className=\"list-ele pointer green-text\" onClick={logoutAction}>Logout</li>\n              </React.Fragment> :\n            \n              null\n            }\n          </ul>\n          <div className=\"menu-drag__wrapper\" id=\"sidebar\" onClick={() => this.toggleSideBar('close')}>\n            <FontAwesomeIcon icon=\"times\" className=\"menu-drag__wrapper--cross\"/>\n            <div className=\"menu-drag__inner-wrapper\">\n              <ul className=\"nav-menu-list\">\n                <li className=\"list-ele nav-menu__logo\">\n                  <img src=\"../images/hyperpure-logo-top.svg\" alt=\"logo\" />\n                </li>\n                <li className=\"list-ele\">About <FontAwesomeIcon icon=\"user\" className=\"icon-menu\"/></li>\n                <li className=\"list-ele\">Pricing <FontAwesomeIcon icon=\"tag\" className=\"icon-menu\"/></li>\n                <li className=\"list-ele\">FAQs <FontAwesomeIcon icon=\"scroll\" className=\"icon-menu\"/></li>\n                <li className=\"list-ele\">Contact <FontAwesomeIcon icon=\"phone\" className=\"icon-menu\"/></li>\n              </ul>\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    logoutStatus: state.statuses.logout.status,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logoutAction: () => {\n      return dispatch(logoutAction());\n    }\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderComponent));\n","import React, { Component } from 'react';\nimport HeaderComponent from '../headers/HeaderComponent';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './home.scss';\n\nclass HomeComponent extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tauthTypeSend: null\n\t\t}\n\t}\n \n\trender(){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t<div className=\"intro-wrapper\">\n\t\t\t<div className=\"hp-container pd-top-global\">\n\t\t\t\t{/*<HeaderComponent handleSignupFromHome={this.handleSignupFromHeader}/>*/}\n\t\t\t\t<div className=\"home-wrapper\">\n\t\t\t\t<HeaderComponent showHeader = {true}/>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 hp-container-mobile\">\n\t\t\t\t\t\t<div className=\"home-intro-wrapper\">\n\t\t\t\t\t\t\t<div className=\"home-head\">\n\t\t\t\t\t\t\t\tHyperpure Logistic Admin\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"home-para\">\n\t\t\t\t\t\t\t\tAdmin for Logistic management\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t\t\t\t\t<Link to=\"auth\">\n\t\t\t\t\t\t\t\t\t<div className=\"btn btn-green\">\n\t\t\t\t\t\t\t\t\t\tGo to Admin &nbsp;<FontAwesomeIcon className=\"home-btn-icon\" icon=\"chevron-circle-right\"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\n\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default HomeComponent;\n","import moment from 'moment';\n\nexport const validEmail = (email) => {\n  if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n    return true\n  }\n  return false\n}\n\nexport const validPhone = (phone) => {\n  if (!/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/.test(phone)) {\n    return true\n  }\n  return false\n}\n\nexport const isNumber = (number) => {\n  if (!/^[0-9]+$/.test(number)) {\n    return true\n  }\n  return false\n}\n\nexport const isRequired = (value) => {\n  if (!value || value == '') {\n    return true\n  }\n  return false\n}\n\nexport const createTableData = (originalData, modal) => {\n  let tableData = [];\n  if (originalData) {\n    let tableKeys = Object.keys(modal);\n\n    for (let i in originalData) {\n      let tableKeysObject = {}\n      tableKeys.map((ele) => {\n\n        if (ele == 'createdAt' || ele == 'updatedAt') {\n          originalData[i][ele] = moment(originalData[i][ele]).format('DD/MM/YYYY')\n        }\n        if (originalData[i][ele] === true) {\n          originalData[i][ele] = 'Yes'\n        } else if (originalData[i][ele] === false) {\n          originalData[i][ele] = 'No'\n        }\n\n        tableKeysObject[ele] = originalData[i][ele]\n        return\n      })\n\n      tableData.push(tableKeysObject);\n    }\n  }\n  return tableData\n}\n\nexport const makeQueryParams = (defaultParams, requestParams) => {\n  let queryParams = Object.assign({}, defaultParams)\n  let queryString = '?';\n  Object.keys(defaultParams).map((ele) => {\n    if (requestParams[ele]) {\n      queryParams[ele] = requestParams[ele];\n      queryString = queryString + `${ele}=${requestParams[ele]}&`\n    } else {\n      queryString = queryString + `${ele}=${queryParams[ele]}&`\n    }\n  })\n  queryString = queryString.substring(0, queryString.length - 1);\n  return queryString\n}\n\nexport const getBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction showLocation(position) {\n  let latitude = position.coords.latitude;\n  let longitude = position.coords.longitude;\n  return {\n    latitude,\n    longitude\n  };\n}\n\nfunction errorHandler(err) {\n  if (err.code == 1) {\n    alert(\"Error: Access is denied!\");\n  } else if (err.code == 2) {\n    alert(\"Error: Position is unavailable!\");\n  }\n}\n\nexport const getLocation = () => {\n  if (navigator.geolocation) {\n\n    // timeout at 60000 milliseconds (60 seconds)\n    let options = { timeout: 60000 };\n    navigator.geolocation.getCurrentPosition(showLocation, errorHandler, options);\n  } else {\n    alert(\"Sorry, browser does not support geolocation!\");\n  }\n}\n","import { isRequired, validEmail, validPhone, isNumber } from '../operations';\n\nfunction validate_email(value){\n    if (isRequired(value)) {\n        return 'Email address is required';\n    }\n    if (validEmail(value)) {\n        return 'Email address is invalid';\n    }\n    return null;\n}\n\nfunction validate_password(value){\n    if (isRequired(value)) {\n        return 'Password is required';\n    }\n    if (value.length < 8) {\n        return 'Password must be 8 or more characters';\n    }\n\n    if(value.search(/\\d/) == -1){\n        return 'Password must contain at least one number';\n    }\n    if(value.search(/[A-Z]/) == -1){\n        return 'Password must contain at least one Uppercase letter';\n    }\n    return null;\n}\n\nfunction validate_phoneNumber(value){\n    if (isRequired(value)) {\n        return 'Phone number is required';\n    }\n    if (validPhone(value)) {\n        return 'Invalid phone number';\n    }\n    if (value.length < 8) {\n        return 'Invalid phone number';\n    }\n    return null;\n}\n\nfunction validate_name(value){\n    if (isRequired(value)) {\n        return 'Name is required';\n    }\n    return null;\n}\n\nexport function validateField(field, value){\n    switch (field) {\n        case 'name':\n            return validate_name(value);\n        case 'email':\n            return validate_email(value);\n        case 'phoneNumber':\n            return validate_phoneNumber(value);\n        case 'password':\n            return validate_password(value);\n        default:\n            return null;\n    }\n}\n\nexport function validateLogin(values) {\n    let errors = {\n        phoneNumber: null,\n        isValidated: true\n    };\n\n    errors.phoneNumber = validate_phoneNumber(values.fields.phoneNumber);\n    errors.isValidated = errors.phoneNumber ? false : errors.isValidated;\n\n    return errors;\n}\n\nexport function validateRegister(values) {\n    let errors = {\n        name: null,\n        phoneNumber: null,\n        email: null,\n        password: null,\n        isValidated: true\n    };\n\n    errors.name = validate_name(values.fields.name);\n    errors.isValidated = errors.name? false : errors.isValidated;\n\n    errors.phoneNumber = validate_phoneNumber(values.fields.phoneNumber);\n    errors.isValidated = errors.phoneNumber? false : errors.isValidated;\n\n    errors.email = validate_email(values.fields.email);\n    errors.isValidated = errors.email? false : errors.isValidated;\n\n    errors.password = validate_password(values.fields.password);\n    errors.isValidated = errors.password? false : errors.isValidated;\n\n    return errors;\n}\n\nexport function validateRegisterOTP(values) {\n    let errors = {\n        otp: null,\n        isValidated: true\n    };\n\n    if (isRequired(values.fields.otp)) {\n        errors.otp = 'Missing OTP';\n        errors.isValidated = false;\n    } else if(isNaN(values.fields.otp)){\n        errors.otp = 'Invalid OTP';\n        errors.isValidated = false;\n    } else if(values.fields.otp.length != 6){\n        errors.otp = '6 digit OTP is required';\n        errors.isValidated = false;\n    }\n\n    return errors;\n}\n\nexport function validateOnboardRegister(values) {\n      let errors = {\n        name: null,\n        isAgreed: null,\n        isValidated: true\n    };\n\n    errors.name = validate_name(values.name);\n    errors.isValidated = errors.name? false : true;\n\n    if (isRequired(values.isAgreed)) {\n        errors.isAgreed = 'Please read and accept T&C';\n        errors.isValidated = false;\n    }\n\n    return errors;\n}\n\n\nexport function validateOnboardBusiness(values) {\n    let errors = {\n        name: null,\n        selectedCategories: false,\n        isValidated: true\n    };\n\n    errors.name = validate_name(values.name);\n    errors.isValidated = errors.name? false : true;\n\n    if (isRequired(values.selectedCategories)) {\n        errors.selectedCategories = 'Please choose atleast one cateogory';\n        errors.isValidated = false;\n    }\n\n    return errors;\n}\n\nexport function validateAddStores(values){\n    let errors = {\n        name: null\n    };\n\n    errors.name = validate_name(values.name);\n    errors.isValidated = errors.name ? false : errors.isValidated;\n\n    return errors;\n}\n\nexport function validateCreateTag(values, errorsVal) {\n    let errors = errorsVal;\n    for(let i in errors){\n        errors[i] = null\n    }\n\n    errors.isValidated = true;\n    let keys = Object.keys(errors);\n    for(let j in keys){\n        if(keys[j] != 'isValidated' && keys[j] != 'active' && keys[j] != 'visible'){\n            if (isRequired(values.fields[keys[j]])) {\n                errors[keys[j]] = 'This field is required';\n                errors.isValidated = errors[keys[j]] ? false : true;\n            }\n        }\n    }\n\n    return errors;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\nimport { sendOtp } from '../../actions/authAction';\nimport Input from \"sushiweb/InputTypes/Input\";\nimport Check from \"sushiweb/Icons/all/Check\";\nimport * as symbols from '../../operations/symbols';\nimport { validateLogin } from '../../operations/form-validation/formValidation';\n\nclass LoginComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: {\n        fields: {\n          phoneNumber: '',\n        },\n        errors: {\n          phoneNumber: null\n        }\n      },\n      validations: {\n        phoneNumber: null,\n      },\n      allValidated: false\n    }\n  }\n\n  handleChange(type, field, value) {\n    this.setState(prevState => ({\n      [type]: {\n        errors: {\n          ...prevState[type].errors,\n        },\n        fields: {\n          ...prevState[type].fields,\n          [field]: value\n        }\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  beginValidation(type, field, value) {\n    this.setState(prevState => ({\n      validations: {\n        ...prevState.validations,\n        [field]: true\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  validateThisField(type, field, value) {\n    var errList = validateLogin(this.state[type]);\n    var err = errList[field];\n    this.setState(prevState => ({\n      [type]: {\n        ...prevState[type],\n        errors: {\n          ...prevState[type].errors,\n          [field]: err\n        }\n      },\n      allValidated: errList.isValidated\n    }))\n  }\n\n  onLogin(e) {\n    e.preventDefault();\n    let loginValidatedData = validateLogin(this.state.login);\n    if (!loginValidatedData.isValidated) {\n      this.setState(prevState => ({\n        login: {\n          ...prevState.login,\n          errors: loginValidatedData\n        }\n      }))\n    } else {\n      this.setState(prevState => ({\n        login: {\n          ...prevState.login,\n          errors: {}\n        }\n      }), () => {\n        this.props.sendOtp(this.state.login.fields);\n      })\n\n    }\n    return false;\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const { sendOtpStatus } = this.props;\n    const prevStatuses = prevProps.sendOtpStatus;\n    if (\n      sendOtpStatus !== prevStatuses &&\n      sendOtpStatus === symbols.STATUS_DONE\n    ) {\n      this.props.sendOtpDone(this.state.login.fields.phoneNumber);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={(e) => this.onLogin(e)}>\n        <div className=\"input-field-wrap\">\n          <Input\n            label=\"Phone number\"\n            type=\"text\"\n            name=\"phone\"\n            key={'login1'}\n            icon={this.state.validations.phoneNumber ? this.state.login.errors.phoneNumber ? \"\" : <Check /> : \"\"}\n            iconColor=\"green\"\n            value={this.state.login.fields.phoneNumber}\n            onBlur={(e) => this.beginValidation('login', 'phoneNumber', e)}\n            errorMsg={this.state.validations.phoneNumber ? this.state.login.errors.phoneNumber : null}\n            onChange={(e) => this.handleChange('login', 'phoneNumber', e)}\n          />\n        </div>\n        <div className=\"btn-wrapper\">\n          <button type=\"submit\" className={this.state.allValidated ? \"btn btn-green\" : \"btn btn-disabled\"}>\n          {\n            this.props.sendOtpStatus == symbols.STATUS_BEGIN ?\n            'Sending...' : 'Send OTP'\n          }\n          </button>\n        </div>\n          {\n            this.props.sendOtpStatus == symbols.STATUS_FAIL && <div className=\"mt-2 red-text\">{this.props.sendOtpError && this.props.sendOtpError.error.message} </div>\n          }\n          {\n            this.props.errors &&  this.props.errors.error ?\n            <div className=\"error mt-1\">{this.props.errors.error.message}</div> : null\n          }\n      </form>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    errors: state.statuses.login.errors,\n    status: state.statuses.login.status,\n    sendOtpStatus: state.statuses.sendOtp.status,\n    sendOtpError: state.statuses.sendOtp.errors,\n  }),\n  dispatch => ({\n    sendOtp: bindActionCreators(sendOtp, dispatch),\n  }),\n)(LoginComponent);\n","import React, { Component } from \"react\";\n\nimport \"./OTPFieldComponent.scss\";\n\nclass OTPFieldComponent extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      otp: 0,\n      enableIndex: 0,\n      fieldValue: Array(props).fill(\"\"),\n      showError: false\n    };\n    this.otpTextInput = [];\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.onBlur);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.onBlur);\n  }\n\n  focusPrevious = index => {\n    const { digits } = this.props;\n    if (index < digits && index >= 0) {\n      this.otpTextInput[index].focus();\n    }\n  };\n\n  onInputFieldClick = (value, index) => {\n    const { digits, onChange } = this.props;\n    let { fieldValue } = this.state;\n    const isValueValid = value >= 0 && value <= 9;\n    if (index != digits && isValueValid) {\n      fieldValue[index] = value;\n      const otp = fieldValue.join(\"\").toString();\n      onChange(otp);\n      if(value!== \"\") {\n        this.focusPrevious(index+1);\n      }\n      \n        }\n    this.setState({ fieldValue: fieldValue, enableIndex: index });\n  };\n\n  onFieldClick = i => {\n    this.setState({ enableIndex: i });\n  };\n\n  onBlur = event => {\n    if (!this.node.contains(event.target)) {\n      const { fieldValue } = this.state;\n      const { validateOTP } = this.props;\n      const value = fieldValue.join(\"\").toString();\n      validateOTP(value);\n      this.setState({ showError: true });\n    }\n  };\n\n  handleKeyPress = (event, index) => {\n    const key = event.which;\n    const { fieldValue } = this.state;\n    if (key === 8 || key === 46) {\n      if(!fieldValue[index]) {\n        this.focusPrevious(index - 1);\n      }\n    } \n  };\n\n  renderDigits() {\n    let { digits } = this.props;\n    let { enableIndex, fieldValue } = this.state;\n    let inputFields = [],\n      i = 0;\n    while (i < digits) {\n      let index = i;\n      inputFields.push(\n        <input\n          className={\n            enableIndex === i || fieldValue[index]\n              ? \"input-field focus-field\"\n              : \"input-field\"\n          }\n          type=\"tel\"\n          onKeyDown={event => this.handleKeyPress(event, index)}\n          onChange={(event) => this.onInputFieldClick(event.target.value, index)}\n          onFocus={() => this.onFieldClick(index)}\n          value={fieldValue[i] || \"\"}\n          key={`input-${i}`}\n          id={`input-${i}`}\n          ref={ref => (this.otpTextInput[index] = ref)}\n          autoFocus={enableIndex === i}\n          autoComplete=\"off\"\n        ></input>\n      );\n      i++;\n    }\n    return inputFields;\n  }\n\n  render() {\n    const inputFields = this.renderDigits();\n    const { errorMsg } = this.props;\n    const { showError } = this.state;\n    return (\n      <div className=\"otp-container\">\n        <span className=\"otp-heading\">Enter OTP</span>\n        <div className=\"input-container\" ref={node => (this.node = node)}>\n          {inputFields.map(inputField => {\n            return inputField;\n          })}\n        </div>\n        {showError || errorMsg ? (\n          <span className=\"mt-2 red-text\">{errorMsg}</span>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default OTPFieldComponent;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport OtpInput from 'react-otp-input';\nimport { connect } from 'react-redux';\nimport { validateRegisterOTP } from '../../operations/form-validation/formValidation';\nimport { bindActionCreators } from 'redux';\nimport { otpVerifyAction, resendOtp } from '../../actions/authAction';\nimport Input from \"sushiweb/InputTypes/Input\";\nimport Check from \"sushiweb/Icons/all/Check\";\nimport LeftTriangle from \"sushiweb/Icons/all/LeftTriangle\";\nimport * as symbols from '../../operations/symbols';\nimport OTPFieldComponent from './../core/OTPFieldComponent/OTPFieldComponent';\n\nclass OTPComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      otp: {\n        fields: {\n          otp: '',\n        },\n        errors: {\n          otp: null\n        }\n      },\n      validations: {\n        otp: null,\n      },\n      allValidated: false,\n      resetSetTimeout: false\n    }\n  }\n\n\n  handleChange(type, field, value) {\n    this.setState(prevState => ({\n      [type]: {\n        errors: {\n          ...prevState[type].errors,\n        },\n\n        fields: {\n          ...prevState[type].fields,\n          [field]: value\n        }\n\n\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  beginValidation(type, field, value) {\n    this.setState(prevState => ({\n      validations: {\n        ...prevState.validations,\n        [field]: true\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  validateThisField(type, field, value) {\n    var errList = validateRegisterOTP(this.state[type]);\n    var err = errList[field];\n    this.setState(prevState => ({\n      [type]: {\n        ...prevState[type],\n        errors: {\n          ...prevState[type].errors,\n          [field]: err\n        }\n      },\n      allValidated: errList.isValidated\n    }))\n  }\n\n  resendOtp(onCall) {\n    let otpFields = {};\n    otpFields.phoneNumber = this.props.phoneNumber\n    this.setState({resetSetTimeout: true});\n    setTimeout(() => {\n      this.setState({resetSetTimeout: false});\n    }, 15000);\n    this.props.actions.resendOtp(otpFields)\n  }\n\n  onSubmitOTP(e) {\n    e.preventDefault();\n    let otpValidatedData = validateRegisterOTP(this.state.otp);\n    if (!otpValidatedData.isValidated) {\n      this.setState(prevState => ({\n        otp: {\n          ...prevState.otp,\n          errors: otpValidatedData\n        }\n      }))\n    } else {\n      this.setState(prevState => ({\n        otp: {\n          ...prevState.otp,\n          errors: {}\n        }\n      }), () => {\n        let otpFields = this.state.otp.fields;\n        otpFields.phoneNumber = this.props.phoneNumber\n        this.props.actions.otpVerifyAction(otpFields);\n      })\n\n    }\n  }\n\n  render() {\n    const { verifyOtpStatus, verifyOtpError, resendOtpStatus, resendOtpError } = this.props;\n    return (\n      <form onSubmit={(e) => this.onSubmitOTP(e)}>\n        <div className=\"input-field-wrap\">\n          {/* <Input\n            label=\"Enter OTP\"\n            type=\"text\"\n            name=\"otp\"\n            otp={'otp1'}\n            icon={this.state.validations.otp ? this.state.otp.errors.otp ? null : <Check /> : null}\n            iconColor=\"green\"\n            value={this.state.otp.fields.otp}\n            onBlur={(e) => this.beginValidation('otp', 'otp', e)}\n            errorMsg={this.state.validations.otp ? this.state.otp.errors.otp : null}\n            onChange={(e) => this.handleChange('otp', 'otp', e)}\n          /> */}\n          {/* <OTPInput /> */}\n          <OTPFieldComponent \n                digits={6} \n                onChange={(value) => this.handleChange('otp', 'otp', value)} \n                validateOTP={(value) => this.beginValidation('otp', 'otp', value)}\n                errorMsg={this.state.validations.otp ? this.state.otp.errors.otp : null}\n          />\n        </div>\n        <div className=\"btn-wrapper\">\n          <button type=\"submit\" className={this.state.allValidated ? \"btn btn-green\" : \"btn btn-disabled\"}>\n            Verify OTP\n          </button>\n          {\n            verifyOtpStatus === symbols.STATUS_FAIL && <div className=\"mt-2 red-text\">{verifyOtpError.error.message}</div>\n          }\n        </div>\n\n        <div className=\"btn-wrapper mt-4\">\n          Didn't receive OTP?\n          <br />\n          {\n            resendOtpStatus === symbols.STATUS_BEGIN ? \n            <span className=\"green-link\">Sending...</span> :\n            <React.Fragment>\n            <span className={this.state.resetSetTimeout ? `green-link disabled` : `green-link pointer` } onClick={() => this.resendOtp()}>Resend OTP</span>\n              {\n                resendOtpStatus === symbols.STATUS_FAIL && <div className=\"mt-2 red-text\">{resendOtpError.error.message}</div>\n              }\n            </React.Fragment>\n          }\n          <br />\n          {\n            resendOtpStatus === symbols.STATUS_DONE && <div className=\"mt-1\">OTP has been sent to your phone</div>\n          }\n        </div>\n\n        <div className=\"mt-7\">\n          <div className=\"light-line\" />\n          <span className=\"green-link\" onClick={this.props.backToLogin}><LeftTriangle className=\"icon-color-green sushi-icon sushi-icon-align-neg icon-fs-14 vertical-align-top\"/> &nbsp;Go Back</span>\n        </div>\n        {\n          this.props.errors &&  this.props.errors.error ?\n          <div className=\"error mt-1\">{this.props.errors.error.message}</div> : null\n        }\n      </form>\n    )\n  }\n}\n\nconst actions = { resendOtp, otpVerifyAction }\nexport default connect(\n  state => ({\n    verifyOtpError: state.statuses.verifyOtp.errors,\n    verifyOtpStatus: state.statuses.verifyOtp.status,\n    resendOtpError: state.statuses.resendOtp.errors,\n    resendOtpStatus: state.statuses.resendOtp.status,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(OTPComponent);\n","import { path } from 'ramda';\nimport actionTypes from './actionTypes';\nimport api from '../operations/api/api';\nimport { ApiAddresses, DefaultParams } from '../common/apiAddresses';\nimport { makeQueryParams } from \"../operations/operations\";\nimport moment from 'moment';\n\nexport const setOrderDetailImages = function(id, images, imageType) {\n  return dispatch => {\n    if (imageType === 'reason') {\n      dispatch({ type: actionTypes.ORDER_RESAON_DETAIL_IMAGES_DONE, images, id });\n    } else if (imageType === 'invoice') {\n      dispatch({ type: actionTypes.INVOICE_IMAGES_DONE, images, id });\n    } else {\n      dispatch({ type: actionTypes.ORDER_DETAIL_IMAGES_DONE, images, id });\n    }\n  };\n};\n\nexport const resetOrderDetailImagesStatus = function() {\n  return dispatch => {\n    dispatch({ type: actionTypes.ORDER_RESAON_DETAIL_IMAGES_BEGIN });\n    dispatch({ type: actionTypes.INVOICE_IMAGES_BEGIN });\n    dispatch({ type: actionTypes.ORDER_DETAIL_IMAGES_BEGIN });\n  };\n};\n\nexport const resetOrderDetailImages = function() {\n  return dispatch => {\n\n    dispatch({ type: actionTypes.RESET_ORDER_DETAIL_IMAGES_DONE });\n  };\n};\n\nexport const removeImageFromOrder = function(id) {\n  return dispatch => {\n    dispatch({ type: actionTypes.REMOVE_DETAIL_IMAGES_ORDER_DONE, id });\n  };\n};\n\nexport const removeImage = function(e, index, images, id) {\n  return dispatch => {\n    let imagesModified = images.filter((ele, currIndex) => {\n      if (currIndex != index) {\n        return ele\n      }\n    })\n    dispatch({ type: actionTypes.REMOVE_DETAIL_IMAGES_DONE, images: imagesModified, id });\n  };\n};\n\nexport const logoutAction = function(payload) {\n  return dispatch => {\n    window.localStorage.removeItem('token');\n    dispatch({ type: actionTypes.LOGOUT_DONE });\n  };\n};\n\nexport const getOrderDetails = function(id) {\n  return dispatch => {\n    dispatch({ type: actionTypes.GET_ORDER_DETAILS_BEGIN });\n\n    api()\n      .get(`${ApiAddresses.getOrderDetails}${id}`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_ORDER_DETAILS_DONE, orderDetails: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_ORDER_DETAILS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const getOrderPhones = function(id) {\n  return dispatch => {\n    dispatch({ type: actionTypes.GET_ORDER_PHONES_BEGIN });\n\n    api()\n      .get(`${ApiAddresses.getOrderPhones}${id}/phones`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_ORDER_PHONES_DONE, orderPhones: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_ORDER_PHONES_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const getOrderProducts = function(id) {\n  return dispatch => {\n    dispatch({ type: actionTypes.GET_ORDER_PRODUCTS_BEGIN });\n\n    api()\n      .get(`${ApiAddresses.getOrderProducts}${id}/products`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_ORDER_PRODUCTS_DONE, orderProducts: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_ORDER_PRODUCTS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const getOrders = function(params) {\n  return dispatch => {\n    let currentDateTime = moment().format('DD-MM-YYYY');\n    const queryParams = DefaultParams.getOrders;\n    queryParams.targetDeliveryDate = currentDateTime;\n    let queryString = makeQueryParams(queryParams, params);\n    dispatch({ type: actionTypes.GET_ORDERS_BEGIN });\n\n    api()\n      .get(`${ApiAddresses.getOrders}${queryString}`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_ORDERS_DONE, orders: data.response.orders });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_ORDERS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\nexport const getAllIssueReasons = function(type) {\n  return dispatch => {\n    dispatch({ type: actionTypes.GET_ALL_ISSUE_REASONS_BEGIN });\n\n    api()\n      .get(`${ApiAddresses.getAllIssueReasons}${type}`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_ALL_ISSUE_REASONS_DONE, reasons: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_ALL_ISSUE_REASONS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\nexport const getAllDeliveryIssueReasons = function(type) {\n  return dispatch => {\n    dispatch({ type: actionTypes.GET_DELIEVRY_ISSUE_REASONS_BEGIN });\n    api()\n      .get(`${ApiAddresses.getAllIssueReasons}${type}`)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.GET_DELIEVRY_ISSUE_REASONS_DONE, deliveryReasons: data.response });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.GET_DELIEVRY_ISSUE_REASONS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const addRemarks = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.ADD_REMARKS_BEGIN });\n\n    api()\n      .post(`${ApiAddresses.addRemarks}${payload.orderId}/remarks/order_remark/${payload.orderId}`, { remark: payload.remark })\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.ADD_REMARKS_DONE, remark: payload });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.ADD_REMARKS_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\nexport const saveProductIssues = function(payload, productId, orderId, issueId) {\n  return dispatch => {\n    dispatch({ type: actionTypes.SAVE_PRODUCT_ISSUES_BEGIN });\n    dispatch({ type: actionTypes.DELETE_PRODUCT_ISSUES_BEGIN });\n    let apiMock;\n    if (issueId) {\n      apiMock = (urlConfig, payload) => {\n        return api()\n          .put(urlConfig + '/' + issueId, payload)\n      }\n    } else {\n      apiMock = (urlConfig, payload) => {\n        return api()\n          .post(urlConfig, payload)\n      }\n    }\n    apiMock(`${ApiAddresses.saveProductIssues}${orderId}/products/${productId}/issues`, payload)\n      .then(({ data, headers }) => {\n        if (issueId) {\n          dispatch({ type: actionTypes.SAVE_PRODUCT_ISSUES_DONE, updatedProductIssue: issueId, productId });\n        } else {\n          dispatch({ type: actionTypes.SAVE_PRODUCT_ISSUES_DONE, updatedProductIssue: data.response, productId });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.SAVE_PRODUCT_ISSUES_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const deleteProductIssues = function(productId, orderId, issueId) {\n  return dispatch => {\n    dispatch({ type: actionTypes.DELETE_PRODUCT_ISSUES_BEGIN });\n    const apiMock = (urlConfig, payload) => {\n      return api()\n        .delete(urlConfig + '/' + issueId)\n    }\n    apiMock(`${ApiAddresses.saveProductIssues}${orderId}/products/${productId}/issues`)\n      .then(({ data, headers }) => {\n\n        dispatch({ type: actionTypes.DELETE_PRODUCT_ISSUES_DONE, updatedProductIssue: null, productId });\n\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.DELETE_PRODUCT_ISSUES_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\nexport const updateOrder = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.UPDATE_ORDER_BEGIN });\n\n    api()\n      .put(`${ApiAddresses.updateOrder}${payload.orderId}`, payload.data)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.UPDATE_ORDER_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.UPDATE_ORDER_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\n// export const setOrderStatusAction = function(payload) {\n//   return dispatch => {\n//     dispatch({ type: actionTypes.ORDER_STATUS_ACTION_BEGIN });\n\n//     api()\n//       .post(`${ApiAddresses.setOrdersStatusAction}`, payload)\n//       .then(({ data, headers }) => {\n//         dispatch({ type: actionTypes.ORDER_STATUS_ACTION_DONE });\n//       })\n//       .catch(err => {\n//         dispatch({\n//           type: actionTypes.ORDER_STATUS_ACTION_FAIL,\n//           errors: path(['response', 'data'], err),\n//         });\n//       })\n//   };\n// };\n\nexport const resetGetOrders = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.RESET_GET_ORDERS_DONE });\n  };\n};\n\nexport const addWave = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.ADD_WAVE_BEGIN });\n\n    api()\n      .post(`${ApiAddresses.addWave}`, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.ADD_WAVE_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.ADD_WAVE_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const reUploadWave = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.REUPLOAD_WAVE_BEGIN });\n\n    api()\n      .put(`${ApiAddresses.addWave}`, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.REUPLOAD_WAVE_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.REUPLOAD_WAVE_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const uploadImages = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.UPLOAD_IMAGES_BEGIN });\n\n    api()\n      .post(`${ApiAddresses.addImages}`, payload)\n      .then(({ data, headers }) => {\n\n        dispatch({ type: actionTypes.UPLOAD_IMAGES_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.UPLOAD_IMAGES_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n\n  };\n};\n\nexport const verifyDeliveryOtp = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.VERIFY_DELIVERY_OTP_BEGIN });\n    api()\n      .post(ApiAddresses.verifyDeliveryOtp, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.VERIFY_DELIVERY_OTP_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.VERIFY_DELIVERY_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\n\nexport const resendDeliveryOtp = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.RESEND_DELIVERY_OTP_BEGIN });\n    payload.countryCode = '91';\n    api()\n      .post(ApiAddresses.sendDeliveryOtp, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.RESEND_DELIVERY_OTP_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.RESEND_DELIVERY_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const sendDeliveryOtp = function(payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.SEND_DELIVERY_OTP_BEGIN });\n    payload.countryCode = '91';\n    api()\n      .post(ApiAddresses.sendDeliveryOtp, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.SEND_DELIVERY_OTP_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.SEND_DELIVERY_OTP_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const cancelOrderDelivery = function(orderId, payload) {\n  return dispatch => {\n    dispatch({ type: actionTypes.CANCEL_DELIVERY_ISSUE_BEGIN });\n    payload.countryCode = '91';\n    api()\n      .post(`${ApiAddresses.deliveryIssue}${orderId}/deliveryIssue`, payload)\n      .then(({ data, headers }) => {\n        dispatch({ type: actionTypes.CANCEL_DELIVERY_ISSUE_DONE });\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.CANCEL_DELIVERY_ISSUE_FAIL,\n          errors: path(['response', 'data'], err),\n        });\n      })\n  };\n};\n\nexport const resetCancelDeliverySatuses = function() {\n  return dispatch => {\n    dispatch({ type: actionTypes.CANCEL_DELIVERY_ISSUE_BEGIN })\n  }\n}\n\nexport const sendEvent = function(payload) {\n  return dispatch => {\n    payload.userType = 'da';\n    payload.entityType = 'order';\n    api()\n      .post(`${ApiAddresses.events}`, payload)\n      .then(({ data, headers }) => {})\n      .catch(err => {})\n  }\n}\n","import React, { Component } from 'react';\nimport {Redirect, Link, Switch} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Input from \"sushiweb/InputTypes/Input\";\nimport Check from \"sushiweb/Icons/all/Check\";\nimport * as symbols from '../../operations/symbols';\nimport { validateLogin} from '../../operations/form-validation/formValidation';\n\nimport HeaderComponent from '../headers/HeaderComponent';\nimport LoginComponent from './LoginComponent';\nimport OTPComponent from './OTPComponent';\nimport PrivateRoute from '../core/PrivateRoute';\nimport './auth.scss'\n\nclass AuthComponent extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thasSentOTP: false,\n\t\t\tphoneNo: null\n\t\t}\n\t}\n\n\n\tsendOtpDone(phoneNo){\n\t\tthis.setState({hasSentOTP: true, phoneNo: phoneNo})\n\t}\n\n\tbackToLogin(){\n\t\tthis.setState({hasSentOTP: false, phoneNo: null})\n\t}\n\n\thashPhoneNumber(number){\n\t\treturn (number[0] + number[1] + '******' + number[8] + number[9]);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<HeaderComponent />\n\t\t\t\t<div className=\"auth-container pd-top-global\">\n\t\t\t\t\t<div className=\"auth-head\">\n\t\t                {\n\t\t                    !this.state.hasSentOTP ?\n\t\t                    <span className={\"auth-head__title fs-28\"}>\n\t\t                        Login\n\t\t                    </span> :\n\t\t                    <span className={\"auth-head__title fs-28\"}>\n\t\t                        OTP\n\t\t                    </span>\n\t\t                }\n\t\t                {\n\t\t                    !this.state.hasSentOTP ?\n\t\t                    <div className=\"auth-head__subhead\">Enter phone number to proceed</div> :\n\t\t                    <div className=\"auth-head__subhead\">We have sent the OTP to {this.hashPhoneNumber(this.state.phoneNo)}</div>\n\t\t                }\n\t\t            \n\t\t                \n\t                </div>\n\t                { !this.state.hasSentOTP ? \n\t                \t<LoginComponent \n\t                \t\tsendOtpDone={(phoneNo) => this.sendOtpDone(phoneNo)}\n\t                \t/> : \n\t                \t<OTPComponent\n\t                \t\tbackToLogin={() => this.backToLogin()}\n\t                \t\tphoneNumber={this.state.phoneNo}\n\t                \t/> \n\t                }\n    \t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default AuthComponent;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Back from \"sushiweb/Icons/all/Back\";\n\nimport './header.scss';\nimport { logoutAction } from '../../actions/authAction';\n\nclass CommonHeaderComponent extends Component {\n\n\n  render() {\n    const { enableBack, icon } = this.props;\n    const id = this.props.match.params.id;\n    return (\n      <React.Fragment>\n         <header id=\"header\" className=\"common-header\">\n          <ul className=\"header-list\">\n            <li className=\"left nav-menu__logo--desktop\">\n              { enableBack &&\n                  <React.Fragment>\n                    <Back className=\"sushi-icon sushi-icon-align\" onClick={() => this.props.history.goBack()}/> \n                    &nbsp;&nbsp;\n                  </React.Fragment>\n              }\n            </li>\n            <li className=\"nav-menu__logo left nav-menu__logo--desktop align-left\">\n              \n              <Link to={`/`}>{this.props.title}</Link> {this.props.routeId}\n            </li>\n            <li className=\" pointer green-text flex-margin fs-12\" onClick={this.props.logoutAction}>Logout</li>\n          </ul>\n        </header>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logoutStatus: state.statuses.logout.status\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logoutAction: () => {\n      return dispatch(logoutAction());\n    }\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CommonHeaderComponent));\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/ordersAction\";\nimport { bindActionCreators } from 'redux';\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport * as symbols from \"../../operations/symbols\";\n\nclass CODComponent extends Component {\n\n  handleCashCollectedClick() {\n    const orderId = this.props.match.params.id;\n    this.props.actions.updateOrder({ orderId: orderId, data: { totalCash: parseInt(this.props.location.state.cash) } });\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { updateOrderStatus } = this.props;\n    if (updateOrderStatus !== prevProps.updateOrderStatus && updateOrderStatus === symbols.STATUS_DONE) {\n      this.props.history.push({\n        pathname: '/order/' + this.props.match.params.id + \"/verifyDelivery\",\n        state: { orderNumber: this.props.location.state.orderNumber }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          !this.props.location.state ?\n            <div>\n              <CommonHeaderComponent title={\"COD\"} enableBack={true}/>\n              <div className=\"pd-top-global fs-18 red-text center\">\n                Unauthorized!!!\n              </div>\n            </div>\n            :\n            <div>\n              <CommonHeaderComponent title={`${this.props.location.state.orderNumber}`} enableBack={true}/>\n              <div className=\"phone-card fs-24 pd-top-global green-text center\">\n                <div className=\"mb-2 pd-top-global\">Collect Cash</div>\n                <div className=\"fs-28\">₹{this.props.location.state.cash}</div>\n              </div>\n              <div className=\"order-card mt-2 fixed-verify-section z-highest\">\n                <div className={\"btn btn-expand btn-green \"} onClick={() => this.handleCashCollectedClick()}>\n                  I have collected the cash\n                </div>\n              </div>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    updateOrderStatus: state.statuses.updateOrder.status,\n    updateOrderError: state.statuses.updateOrder.error,\n    orders: state.orders,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(CODComponent));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\n\nimport * as symbols from '../../operations/symbols';\nimport * as actions from \"../../actions/ordersAction\";\nimport './orders.scss';\n\nclass OrderCardComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  getStatusBtn(status, hasImages = false) {\n    return (\n      <div className=\"order-value\">\n        {\n          status == 'pending' && hasImages == false &&\n          <div className=\"btn btn-yellow btn-sm nohover\">\n            Pending\n          </div>\n        }\n\n        {\n          status == 'pending' && hasImages == true &&\n          <div className=\"btn btn-disabled btn-sm nohover\">\n            Approval Pending\n          </div>\n        }\n\n        {\n          status == 'rejected' && \n          <div className=\"btn btn-red btn-sm nohover\">\n            Rejected\n          </div>\n        }\n        {\n          status == 'approved' && \n          <div className=\"btn btn-green btn-sm nohover\">\n            Approved\n          </div>\n        }\n      </div>\n    )\n  }\n\n  getVerifiedBtn(status) {\n    return (\n      <div className=\"order-value\">\n            {\n                status === \"delivered\" ?\n                    <div className=\"btn btn-info btn-sm nohover\">\n                      OTP Verified\n                    </div>\n                :\n                  status === \"cancelled\"?\n                    <div className=\"btn btn-red-smoke btn-sm nohover\">\n                      Cancelled\n                    </div>\n                    :\n                    <div className=\"btn btn-yellow btn-sm nohover\">\n                      Pending\n                    </div>\n                  \n            }\n            </div>\n    )\n  }\n\n  getPhoneNumber(phones) {\n    if (phones.length > 0) {\n      return (<React.Fragment><FontAwesomeIcon icon=\"phone\" className=\"blue-text\"/> +91 {phones[0].phoneNumber}</React.Fragment>)\n    } else {\n      return \"-\"\n    }\n  }\n\n  sendToDetail(id, type) {\n    if (type == 'start') {\n      const params = {\n        entityId: id,\n        eventName: 'delivery_start'\n      }\n      this.props.actions.sendEvent(params);\n    }\n    this.props.history.push('/order/' + id)\n  }\n\n  render() {\n    const { order } = this.props;\n    return (\n      <div className=\"order-card mt-1 mb-1\">\n        <div className=\"order-title\">\n          <div className=\"row\">\n                <div className=\"col-xs-6\">\n                    <div className=\"subtitle fs-15\">\n                        Order - <span className=\"okra-med\">{order.orderNumber}</span>\n                    </div>\n                </div>\n                <div className=\"col-xs-6 align-right\">\n                    <div className=\"value\">\n                        {\n                          this.getVerifiedBtn(order.status)\n                        }\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        <div className=\"light-line\"></div>\n        <div className=\"orders-body\">\n            <div className=\"row\">\n              <div className=\"col-xs-6\">\n                <div className=\"mt-1 subtitle\">\n                    Outlet\n                </div>\n                <div className=\" value\">\n                    {order.outletName}\n                </div>\n              </div>\n              <div className=\"col-xs-6\">\n                    <div className=\"mt-1 subtitle\">\n                      Phone\n                    </div>\n                    <div className=\" value\">\n                      <a href={`tel:${this.getPhoneNumber(order.phones)}`}>\n                        {this.getPhoneNumber(order.phones)}\n                      </a>\n                    </div>\n              </div>\n            </div>\n             <div className=\"row\">\n              <div className=\"col-xs-12\">\n                <div className=\"mt-1 subtitle\">\n                    Address\n                </div>\n                <div className=\" value\">\n                    {order.outletAddress}\n                </div>\n              </div>\n              \n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs-6\">\n                    <div className=\"mt-1 subtitle\">\n                      Delivery Slot\n                    </div>\n                    <div className=\" value\">\n                      <div className=\"mt-1 value\">\n                      {order.slotTime === '' ? '-' : order.slotTime}\n                  </div>\n                    </div>\n              </div>\n            </div>\n            {\n              !order.fetchedStatus ?\n                <div className=\"btn btn-expand btn-transparent mt-2\">\n                  Updating order details...\n                </div>\n              :\n              \n              <React.Fragment>\n                {\n                  !(order.status === \"cancelled\") ?\n                    <React.Fragment>\n                      {\n                        order.status !== \"delivered\" ?\n                          <React.Fragment>\n                            <div className=\"btn btn-expand btn-green mt-2\"\n                                 onClick={(id) => this.sendToDetail(order.orderId, 'start')}>\n                              Start Delivery Process\n                            </div>\n                            {\n                              <div className=\"btn btn-expand btn-transparent mt-1\"\n                                   onClick={(id) => this.props.openReasonListModal(order.orderId)}>\n                                Cancel Delivery\n                              </div>\n                            }\n                          </React.Fragment>\n                          :\n                          <div className=\"btn btn-expand btn-transparent-green btn-normal mt-2\"\n                               onClick={(id) => this.sendToDetail(order.orderId, 'delivery')}>\n                            View details\n                          </div>\n                      }\n                    </React.Fragment>\n                    : null\n                }\n              </React.Fragment>\n            }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    // errors: state.statuses.login.errors,\n    // status: state.statuses.login.status,\n    user: state.auth.user\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(OrderCardComponent));\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Filter } from \"sushiweb/Icons\";\nimport './core.scss';\n\nclass StateFilterComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        const {filterId} = this.props;\n        return (\n            <React.Fragment>\n              <div className=\"order-filter-wrapper\">\n    \n                    <div className=\"inline-list order-filter-wrapper_inner\">\n                      FILTER &nbsp;<Filter className=\"inline-block light-text fs-10 icon-small\"/>\n                      <div className={filterId == 4 ? \"btn btn-filter btn-active-filter\" : \"btn btn-filter\"} onClick={(e, val) => this.props.handelFilterChange(e, 4, 'PENDING')}>\n                        Pending\n                        {\n                          filterId == 4\n                          && <FontAwesomeIcon icon=\"times\" className=\"btn-icon\" onClick={(e) => this.props.clearFilter(e)}/>\n                        }\n                      </div>\n                      <div className={filterId == 5 ? \"btn btn-filter btn-active-filter\" : \"btn btn-filter\"} onClick={(e, val) => this.props.handelFilterChange(e, 5, true)}>\n                        Completed\n                        {\n                          filterId == 5\n                          && <FontAwesomeIcon icon=\"times\" className=\"btn-icon\" onClick={(e) => this.props.clearFilter(e)}/>\n                        }\n                      </div>\n                      {/*<div className={filterId == 6 ? \"btn btn-filter btn-active-filter\" : \"btn btn-filter\"} onClick={(e, val) => this.props.handelFilterChange(e, 6, 'true')}>*/}\n                      {/*  Cancelled orders*/}\n                      {/*  {*/}\n                      {/*    filterId == 6*/}\n                      {/*    && <FontAwesomeIcon icon=\"times\" className=\"btn-icon\" onClick={(e) => this.props.clearFilter(e)}/>*/}\n                      {/*  }*/}\n                      {/*</div>*/}\n                    </div>\n        \n            </div>\n          </React.Fragment>\n\n        )\n    }\n}\n\nexport default StateFilterComponent;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../../actions/ordersAction';\nimport * as symbols from '../../operations/symbols';\nimport { getBase64 } from '../../operations/operations';\n\n\nclass PictureModeModal extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imagesUploaded: []\n    }\n  }\n\n  handleImageInputClick(type) {\n    document.getElementById(type).click((e) => {})\n  }\n\n  async handleImagesStore(files) {\n    const imgResult = [];\n    for (let i = 0; i < files.length; i++) {\n      await getBase64(files[i])\n        .then((result) => {\n          imgResult.push(result)\n\n        })\n        .catch((err) => {})\n    }\n    return imgResult\n  }\n\n  handleSelectedImage(e, type) {\n    let files = e.target.files;\n    this.setState({ imagesUploaded: files }, () => {\n      if (this.props.hasSameRoute) {\n        this.props.closePictureModeModal();\n      }\n      this.props.actions.setOrderDetailImages(this.props.id, files, type);\n    })\n  }\n\n  handleSelectedDefaultImage(e) {\n    let files = e.target.files;\n    this.setState({ imagesUploaded: files }, () => {\n      this.props.setImages(files);\n    })\n  }\n\n  componentDidMount() {\n    this.props.actions.resetOrderDetailImages();\n  }\n\n  uploadedImagesRedirect() {\n    return (\n      <React.Fragment>\n       {\n          !this.props.redirectedURL ? \n          <Redirect to={{\n              pathname: `/order/${this.props.id}`\n          }}/> :\n          <Redirect to={{\n              pathname: `${this.props.redirectedURL}`,\n              state: {id: `${this.props.id}`, images: `${this.props.images}`}\n          }}/>\n       }\n      </React.Fragment>\n    )\n  }\n\n  reasonImagesRedirect() {\n    return (\n      <React.Fragment>\n        {\n          !this.props.redirectedURL ? \n          <Redirect to={{\n             pathname: `/order/${this.props.id}`\n          }}/> :\n          <Redirect to={{\n             pathname: `${this.props.redirectedURL}`\n          }}/>\n        }\n      </React.Fragment>\n    )\n  }\n\n  invoiceImagesRedirect() {\n    if (!this.props.redirectedURL) {\n      this.props.history.push({\n        pathname: `/order/${this.props.id}`\n      })\n    } else {\n      this.props.history.push({\n        pathname: `${this.props.redirectedURL}`,\n        state: { id: `${this.props.id}`, orderNumber: `${this.props.orderNumber}`, images: `${this.props.images}` }\n      })\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (prevProps.isOpen != this.props.isOpen && this.props.hasNotWrapper\n    ) {\n      document.getElementById('takePicture') && this.handleImageInputClick('takePicture');\n    }\n\n    \n  }\n\n  render() {\n    const { isOpen, status, hasNotWrapper } = this.props;\n    const { imagesUploaded } = this.state;\n    if (isOpen) {\n      if (hasNotWrapper) {\n        return (\n          <React.Fragment>\n            { \n              !this.props.default && \n                 this.props.orders.uploadedImages[this.props.id] && \n                 this.props.orders.uploadedImages[this.props.id].length > 0 && \n                 this.uploadedImagesRedirect()              \n             }\n             { \n               !this.props.default && \n                  (this.props.orders.reasonImages[this.props.id] && \n                  this.props.orders.reasonImages[this.props.id].length > 0) &&\n                  this.reasonImagesRedirect()\n                 \n             }\n             { \n               !this.props.default &&\n                  (this.props.orders.invoiceImages[this.props.id] && \n                  this.props.orders.invoiceImages[this.props.id].length > 0) &&\n                  this.invoiceImagesRedirect()\n             }\n            {\n              !this.props.default ?\n              <input hidden type=\"file\" accept=\"image/*\" capture=\"camera\" id=\"takePicture\" onChange={(e, type) => this.handleSelectedImage(e, this.props.type)}/> :\n              <input hidden type=\"file\" accept=\"image/*\" capture=\"camera\" id=\"takePicture\" onChange={(e) => this.handleSelectedDefaultImage(e)}/>\n            }\n          </React.Fragment>\n        )\n      }\n      return (\n        <div className=\"modal\">\n           { \n            !this.props.default && \n               this.props.orders.uploadedImages[this.props.id] && \n               this.props.orders.uploadedImages[this.props.id].length > 0 && \n               this.uploadedImagesRedirect()              \n           }\n           { \n             !this.props.default && \n                (this.props.orders.reasonImages[this.props.id] && \n                this.props.orders.reasonImages[this.props.id].length > 0) &&\n                this.reasonImagesRedirect()\n               \n           }\n           { \n             !this.props.default &&\n                (this.props.orders.invoiceImages[this.props.id] && \n                this.props.orders.invoiceImages[this.props.id].length > 0) &&\n                this.invoiceImagesRedirect()\n           }\n           <div className=\"modal-overlay modal-picture\">\n               <div className=\"modal-title align-left\">\n                   {this.props.title ? this.props.title : 'Upload Photo'}\n                   <FontAwesomeIcon icon=\"times\" className=\"right\" onClick={this.props.closePictureModeModal}/>\n               </div>\n               <div className=\"light-line\" />\n               {\n                !this.props.default ?\n                <div className=\"modal-body align-left\">  \n                    {\n                      this.props.modalBody &&  this.props.modalBody()\n                    }\n                    <input hidden type=\"file\" accept=\"image/*\" capture=\"camera\" id=\"takePicture\" onChange={(e, type) => this.handleSelectedImage(e, this.props.type)}/>\n                    <input hidden type=\"file\" accept=\"image/*\" multiple id=\"selectPicture\" onChange={(e, type) => this.handleSelectedImage(e, this.props.type)}/>\n                    <div className=\"btn btn-green btn-expand\" onClick={(type) => this.handleImageInputClick('takePicture')}>\n                        <FontAwesomeIcon icon=\"camera\" /> &nbsp;Click photo\n                    </div> \n                </div> :\n                <div className=\"modal-body align-left\">\n                    {\n                      this.props.modalBody &&  this.props.modalBody()\n                    }\n                    <input hidden type=\"file\" accept=\"image/*\" capture=\"camera\" id=\"takePicture\" onChange={(e) => this.handleSelectedDefaultImage(e)}/>\n                    <input hidden type=\"file\" accept=\"image/*\" multiple id=\"selectPicture\" onChange={(e) => this.handleSelectedDefaultImage(e)}/>\n                    <div className=\"btn btn-green btn-expand\" onClick={(type) => this.handleImageInputClick('takePicture')}>\n                        <FontAwesomeIcon icon=\"camera\" /> &nbsp;Click photo\n                    </div>\n                </div>\n               }\n           </div>\n       </div>\n      )\n    }\n    return null\n\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    errors: state.statuses.orderDetailImages.errors,\n    status: state.statuses.orderDetailImages.status,\n    orders: state.orders\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(PictureModeModal));\n","import React from 'react';\n\nfunction LoaderComponent(props) {\n  return (\n    <div className=\"loader\">\n\t  <div></div>\n\t  <div></div>\n\t  <div></div>\n\t</div>\n  );\n}\n\nexport default LoaderComponent;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../../actions/ordersAction';\nimport * as symbols from '../../operations/symbols';\nimport { getBase64 } from '../../operations/operations';\nimport LoaderComponent from '../core/LoaderComponent';\n\n\nclass ReasonListModal extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  handleImageInputClick(type) {\n    document.getElementById(type).click((e) => {})\n  }\n\n  componentDidMount() {\n    if (!this.props.orders.deliveryReasons)\n      this.props.actions.getAllDeliveryIssueReasons('deliveryIssue');\n  }\n\n  goToReasonPage(id, subtype) {\n    this.props.history.push(`/order/${this.props.id}/reason/${id}/${subtype}`)\n  }\n\n  renderReasonList() {\n    const { orders } = this.props;\n    return (\n      orders && orders.deliveryReasons && orders.deliveryReasons.map((ele, index) => {\n        return (\n          <div className=\"reason-list\" key={index} onClick={() => this.goToReasonPage(ele.id, ele.subtype)}>\n            {ele.name}\n            <FontAwesomeIcon icon=\"chevron-right\" className=\"right gray-text\"/>\n          </div>\n        )\n      })\n    )\n  }\n\n  render() {\n    const { isOpen, status, orders } = this.props;\n\n    if (isOpen) {\n      return (\n        <div className=\"modal\">\n          { this.props.status != symbols.STATUS_DONE ? <LoaderComponent /> :\n            <div className=\"modal-overlay modal-picture\">\n                <div className=\"modal-title align-left\">\n                    Tell us why you can't deliver\n                    <FontAwesomeIcon icon=\"times\" className=\"right\" onClick={this.props.closeReasonListModal}/>\n                </div>\n                <div className=\"light-line\" />\n                {\n                  <div className=\"modal-body align-left\">\n                    {this.renderReasonList()}\n                  </div>\n                }\n            </div>\n          }\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    errors: state.statuses.getDeliveryIssueReasons.errors,\n    status: state.statuses.getDeliveryIssueReasons.status,\n    orders: state.orders\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(ReasonListModal));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as symbols from '../../operations/symbols';\nimport { getOrders, sendEvent } from '../../actions/ordersAction';\nimport CommonHeaderComponent from '../headers/CommonHeaderComponent';\nimport OrderCardComponent from './OrderCardComponent';\nimport StateFilterComponent from '../core/StateFilterComponent';\nimport PictureModeModal from '../core/PictureModeModal';\nimport ReasonListModal from '../core/ReasonListModal';\nimport LoaderComponent from '../core/LoaderComponent';\nimport Search from \"sushiweb/Icons/all/Search\";\nimport './orders.scss';\n\nclass OrdersComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      openPictureModeModal: false,\n      filterId: null,\n      filterValue: '',\n      searchVal: '',\n      selectedId: null,\n      openReasonListModal: false,\n      selectedOrder: null\n    }\n  }\n\n  componentDidMount() {\n    const params = {\n      daNumber: this.props.user.phone\n    }\n    this.props.actions.getOrders(params);\n  }\n\n  openPictureModeModal(id) {\n    this.setState({\n      openPictureModeModal: true,\n      selectedId: id\n    })\n  }\n\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  setSearchVal = (e) => {\n    this.setState({ searchVal: e.target.value })\n  }\n\n  handleSearchFilter(e) {\n    e.preventDefault();\n    let params = {\n      orderNumber: this.state.searchVal,\n      daNumber: this.props.user.phone\n    }\n\n    let statusParams = {};\n\n    if (this.state.filterId == 1) {\n      statusParams.withImagesOnly = this.state.filterValue\n    } else if (this.state.filterId == 4) { // for Undelivered orders\n      params.status = 'pending'\n    } else if (this.state.filterId == 5) { // for completed orders\n      params.status = 'completed'\n    } else if (this.state.filterId == 6) { // for cancelled orders\n      params.withDeliveryIssues = 'true'\n    }  else {\n      statusParams.status = this.state.filterValue\n    }\n\n    params = { ...params, ...statusParams };\n    this.props.actions.getOrders(params);\n\n    return false\n  }\n\n  clearFilter(e) {\n    e.stopPropagation();\n    this.setState({ filterId: null, filterValue: '' }, () => {\n      this.handleSearchFilter(e);\n    });\n  }\n\n  handelFilterChange(e, filterId, value) {\n    this.setState({ filterId, filterValue: value }, () => {\n      this.handleSearchFilter(e)\n    })\n  }\n\n  openReasonListModal(id, order) {\n    const params = {\n        entityId: id,\n        eventName: 'cancellation_start'\n      }\n    this.props.actions.sendEvent(params);\n    this.setState({ openReasonListModal: true, selectedId: id, selectedOrder: order })\n  }\n\n  closeReasonListModal(id) {\n    this.setState({ openReasonListModal: false, selectedOrder: null })\n  }\n\n  render() {\n\n    const { openPictureModeModal, closePictureModeModal, openReasonListModal, closeReasonListModal } = this.state;\n    const { getOrdersStatus, orders } = this.props;\n\n    return (\n      <div className=\"hp-container gray-wrap pd-top-global\">\n        <PictureModeModal \n            isOpen={openPictureModeModal} \n            closePictureModeModal={() => this.closePictureModeModal()}\n            id={this.state.selectedId}\n        />\n        <ReasonListModal\n          isOpen={openReasonListModal} \n          closeReasonListModal={() => this.closeReasonListModal()}\n          id={this.state.selectedId}\n          selectedOrder={this.state.selectedOrder}\n        />\n        <CommonHeaderComponent\n          title={orders && orders.length == 0 ? 'Orders' : 'Route'}\n          routeId={orders && orders.length > 0 && orders[0].route}\n        />\n        <div className=\"order-top-header\">\n          <form className=\"no-style\" onSubmit={(e) => this.handleSearchFilter(e)}>\n            <div className=\"input-field-wrap\">\n              <input \n                type=\"text\" \n                className=\"input-field__input search-input\" \n                placeholder=\"Search order number\"\n                onChange={this.setSearchVal}\n              />\n              <button type=\"submit\" className=\"search-icon\">\n                <Search className=\"icon-color-gray icon-fs-15\"/>\n              </button>\n            </div>\n          </form>\n          <StateFilterComponent \n              filterId={this.state.filterId} \n              handelFilterChange={(e, id, value) => this.handelFilterChange(e, id, value)}\n              clearFilter={(e) => this.clearFilter(e)}\n          />\n        </div>\n        {\n          getOrdersStatus == symbols.STATUS_BEGIN ?\n            <LoaderComponent /> \n          :\n           <React.Fragment>\n       \n          {\n            this.props.orders && this.props.orders.length > 0 ?\n            <React.Fragment>\n              { this.props.orders.sort((a, b) => {\n                // sort by keeping pending on top\n                if(a.status!==b.status){\n                  if(a.status===\"pending\"){\n                    return -1\n                  }else {\n                    return 1\n                  }\n                }\n                }).map((ele, index) => {\n                    return(\n                      <OrderCardComponent \n                        order={ele}\n                        openReasonListModal={(id, ele) => this.openReasonListModal(id, ele)}\n                        openPictureModeModal={(id) => this.openPictureModeModal(id)}\n                        key={index}\n                      />\n                    )\n                })\n              }\n              </React.Fragment> :\n            <div className=\"black-text order-top-header mt-2\">No Results Found</div>\n          }\n          </React.Fragment>\n        }\n      </div>\n    )\n  }\n}\n\nconst actions = { getOrders, sendEvent}\nexport default connect(\n  state => ({\n    getOrdersStatus: state.statuses.getOrders.status,\n    getOrdersError: state.statuses.getOrders.error,\n    orders: state.orders.orders,\n    user: state.auth.user\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(OrdersComponent);\n","export const REASON_RULE_PHOTO_MANDATE = 'PHOTO_MANDATORY';\nexport const ORDER_STATUS = {\n  delivered: 'delivered',\n  cancelled: 'cancelled',\n  rejected: 'rejected',\n  pending: 'pending',\n  approved: 'approved'\n}\n","import React from 'react';\nimport { useState, useEffect, useCallback } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport * as symbols from '../../operations/symbols';\n\nexport const PhotoViewer = props => {\n  const {\n    photos,\n    removeCross,\n    showPhotoViewer,\n    name,\n    className,\n    uploadImagesStatus\n  } = props;\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [images, setImages] = useState([{ src: '' }]);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const setImagesState = (e, index) => {\n    const images = props.photos.reduce((acc, ele) => {\n      if (props.name === 'imageUrl') {\n        acc.push({\n          src: ele.imageUrl\n        })\n      } else {\n        acc.push({\n          src: URL.createObjectURL(ele)\n        })\n      }\n      return acc\n    }, [])\n    setImages(images)\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }\n  return (\n\n    <React.Fragment>\n      {/*<Gallery photos={props.photos} onClick={openLightbox} />*/}\n      <div>\n        {\n          photos && photos.map((ele, index) => {\n            return(\n              <div className=\"order-photo-wrapper\" key={index}>\n                  {\n                    removeCross ? \n                    null : \n                    <div className=\"cross-image\" onClick={(e) => props.removeImage(e, index, props.photos, props.id)}>\n                      <FontAwesomeIcon icon=\"times\" />\n                    </div>\n                  }\n                  {\n                    showPhotoViewer ? \n                    <React.Fragment>\n                      {\n                        name === \"imageUrl\" ?\n                        <div className={`gallery-item ${className}`} style={{'backgroundImage': 'url('+ele.imageUrl+')'}} onClick={(event) => setImagesState(event, index)}/> :\n                        <div className={`gallery-item ${className}`} style={{'backgroundImage': 'url('+URL.createObjectURL(ele)+')'}} onClick={(event) => setImagesState(event, index)}/>\n                      }\n                    </React.Fragment> :\n                    <React.Fragment>\n                      {\n                        name === \"imageUrl\" ?\n                        <div className={`gallery-item ${className}`} style={{'backgroundImage': 'url('+ele.imageUrl+')'}} /> :\n                        <div className={`gallery-item ${className}`} style={{'backgroundImage': 'url('+URL.createObjectURL(ele)+')'}} />\n                      }\n                    </React.Fragment>\n                  }\n                  \n                  \n             \n              </div>\n            )     \n          })\n        }\n        <div className=\"order-photo-wrapper\">\n        {\n          uploadImagesStatus === symbols.STATUS_BEGIN ?\n          <div className=\"gallery-item order-photo-ele order-photo-placeholder\" >\n            <FontAwesomeIcon icon=\"spinner\" className=\"animate-spinner\"/>\n        </div> :\n        <div className=\"gallery-item order-photo-ele order-photo-placeholder\" onClick={() => props.openPictureModeModal()}>\n            <FontAwesomeIcon icon=\"camera\"/>\n        </div>\n        }\n        \n        </div>\n      </div>\n      <ModalGateway className=\"z-highest\">\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={images.map(x => (\n                {\n                ...x,\n                srcset: x.src\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </React.Fragment>\n  );\n}\n\n\nexport const PhotoMainViewer = props => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [images, setImages] = useState([{ src: '' }]);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const setImagesState = (e, index) => {\n    const images = props.photos.reduce((acc, ele) => {\n      if (props.name === 'url') {\n        acc.push({\n          src: ele.url\n        })\n      } else {\n        acc.push({\n          src: ele.imageUrl\n        })\n      }\n      return acc\n    }, [])\n    setImages(images)\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }\n\n  return (\n    <div>\n      {/*<Gallery photos={props.photos} onClick={openLightbox} />*/}\n      <div className={`gallery ${props.mainClassName ? props.mainClassName : ''}`}>\n        {\n          props.photos.map((ele, index) => {\n            return(\n               <div className=\"order-photo-wrapper\" key={index}>\n               {\n                  props.name === 'url' ?\n                  <div className={`gallery-item ${props.className}`} style={{'backgroundImage': 'url('+ele.url+')'}} onClick={(event) => setImagesState(event, index)}/>\n                :\n                  <div className={`gallery-item ${props.className}`} style={{'backgroundImage': 'url('+ele.imageUrl+')'}} onClick={(event) => setImagesState(event, index)}/>\n               }\n              </div>\n            )     \n          })\n        }\n      </div>\n      <ModalGateway className=\"z-highest\">\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={images.map(x => (\n                {\n                ...x,\n                srcset: x.src\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as symbols from '../../operations/symbols';\nimport { ORDER_STATUS } from '../../operations/constants';\nimport * as actions from '../../actions/ordersAction'\nimport { getBase64, getLocation } from '../../operations/operations';\nimport CommonHeaderComponent from '../headers/CommonHeaderComponent';\nimport PictureModeModal from '../core/PictureModeModal';\nimport { PhotoViewer, PhotoMainViewer } from '../core/PhotoViewerComponent';\nimport LoaderComponent from '../core/LoaderComponent';\nimport Input from \"sushiweb/InputTypes/Input\";\nimport Call from \"sushiweb/Icons/all/Call\";\n\nclass OrderDetailComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openPictureModeModal: false,\n      position: {\n        longitude: 0,\n        latitude: 0\n      },\n      phones: [],\n      noPhonesData: false,\n      imagesUploaded: [],\n      showCommentAddBtn: false,\n      remark: ''\n    }\n  }\n\n  componentDidMount() {\n    this.props.actions.getOrderDetails(this.props.match.params.id);\n    this.props.actions.getOrderPhones(this.props.match.params.id);\n  }\n\n  addRemark(e) {\n    e.preventDefault();\n    const payload = {\n      orderId: this.props.match.params.id,\n      remark: this.state.remark,\n      remarkBy: 'Da',\n    }\n    this.props.actions.addRemarks(payload)\n  }\n\n  cancelRemark() {\n    this.setState({ remark: '' })\n  }\n\n  getStatusBtn(status) {\n    return (\n      <div className=\"order-value\">\n        {\n          status === ORDER_STATUS.pending &&\n          <div className=\"btn btn-yellow btn-sm btn-flat nohover\">\n            Pending\n          </div>\n        }\n        {\n          status === ORDER_STATUS.rejected &&\n          <div className=\"btn btn-red btn-sm btn-flat nohover\">\n            Rejected\n          </div>\n        }\n        {\n          status === ORDER_STATUS.approved &&\n          <div className=\"btn btn-green btn-sm btn-flat nohover\">\n            Approved\n          </div>\n        }\n      </div>\n    )\n  }\n\n  getVerifiedBtn(status) {\n    return (\n      <React.Fragment>\n        {\n          status === ORDER_STATUS.delivered ?\n            <div className=\"btn btn-info btn-sm nohover\">\n              OTP Verified\n            </div>\n          :\n          status ===  ORDER_STATUS.cancelled?\n          <div className=\"btn btn-red-smoke btn-sm nohover\">\n            Cancelled\n          </div>\n          :\n          <div className=\"btn btn-yellow btn-sm nohover\">\n            Pending\n          </div>\n        }\n      </React.Fragment>\n    )\n  }\n\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  sendToOrder() {\n    this.handleSelectedImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { uploadImagesStatus, remarkStatus, getPhonesStatus, orders, orderDetailImagesStatus } = this.props;\n    if (uploadImagesStatus !== prevProps.uploadImagesStatus && uploadImagesStatus === symbols.STATUS_DONE) {\n      this.props.actions.removeImageFromOrder(this.props.match.params.id);\n      this.props.actions.getOrderDetails(this.props.match.params.id);\n    }\n    if (orders.orderPhones && getPhonesStatus !== prevProps.getPhonesStatus && getPhonesStatus === symbols.STATUS_DONE) {\n      this.setState({ phones: orders.orderPhones })\n    }\n    if (getPhonesStatus !== prevProps.getPhonesStatus && getPhonesStatus === symbols.STATUS_FAIL) {\n      this.setState({ noPhonesData: true })\n    }\n\n    if (uploadImagesStatus !== prevProps.uploadImagesStatus && uploadImagesStatus === symbols.STATUS_FAIL) {\n      document.getElementById('takePicture').value = '';\n      this.props.actions.resetOrderDetailImages();\n    }\n\n    if (remarkStatus !== prevProps.remarkStatus && remarkStatus === symbols.STATUS_DONE) {\n      // const orderId = this.props.match.params.id;\n      // this.props.actions.setRemarkTemp(orderId);\n      document.getElementById('add-comment').blur();\n      this.cancelRemark()\n    }\n    if (orderDetailImagesStatus !== prevProps.orderDetailImagesStatus && orderDetailImagesStatus === symbols.STATUS_DONE) {\n      this.sendToOrder();\n      this.props.actions.resetOrderDetailImagesStatus();\n    }\n  }\n\n\n  handleSelectedImage(e) {\n    let payload = new FormData();\n    payload.append('orderId', this.props.match.params.id);\n    if (this.props.orders.uploadedImages[this.props.match.params.id].length == 1) {\n      payload.append('files', this.props.orders.uploadedImages[this.props.match.params.id][0]);\n    } else {\n      for (let i = 0; i < this.props.orders.uploadedImages[this.props.match.params.id].length; i++) {\n        payload.append('files', this.props.orders.uploadedImages[this.props.match.params.id][i]);\n      }\n    }\n\n    payload.append('latitude', this.state.position.latitude);\n    payload.append('longitude', this.state.position.longitude);\n    payload.append('imageType', \"order_image\");\n    this.props.actions.uploadImages(payload)\n  }\n\n  handleDeliverClick(paymentMode, orderNumber) {\n\n    const id = this.props.match.params.id;\n    const params = {\n      entityId: parseInt(id),\n      eventName: 'verify_products_start'\n    }\n    this.props.actions.sendEvent(params);\n    let invoiceImages = this.props.orders.orderDetails.images.reduce((acc, ele) => {\n      if (ele.entityType === 'invoice') {\n        acc.push(ele)\n      }\n      return acc\n    }, [])\n    this.props.history.push({\n      pathname: '/order/' + id + '/products',\n      state: { paymentMode, orderNumber, images: invoiceImages }\n    })\n\n  }\n\n  // Image handlers\n  handleSelectedImageChange(e, type) {\n    let files = e.target.files;\n    this.setState({ imagesUploaded: files }, () => {\n      this.props.actions.setOrderDetailImages(this.props.match.params.id, files, type);\n\n      document.getElementById('takePicture').value = ''\n    })\n  }\n\n  handleImageInputClick(type) {\n    document.getElementById(type).click((e) => {})\n  }\n\n\n  openPictureModeModal() {\n    this.handleImageInputClick('takePicture');\n    // this.setState({ openPictureModeModal: true })\n  }\n\n  toggleCommentAddBtn(e) {\n    e.preventDefault();\n    this.setState(prevState => ({ showCommentAddBtn: !this.state.showCommentAddBtn }))\n  }\n\n  handleCommentValue(e) {\n    this.setState({ remark: e.target.value })\n  }\n\n  render() {\n    const { orders, getOrdersStatus, uploadImagesStatus, uploadImagesError } = this.props;\n    const { openPictureModeModal, closePictureModeModal, showCommentAddBtn } = this.state;\n    const id = this.props.match.params.id;\n    if (getOrdersStatus == symbols.STATUS_BEGIN || !orders.orderDetails) {\n      return (\n        <LoaderComponent/>\n      )\n    }\n    return (\n      <div className=\"hp-container pd-top-global mh-100 white-wrap pd-bottom-global\">\n        {/*<PictureModeModal\n          isOpen={openPictureModeModal}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          hasSameRoute={true}\n          id={id}\n        />*/}\n        <input hidden type=\"file\" accept=\"image/*\" capture=\"camera\" id=\"takePicture\" onChange={(e, type) => this.handleSelectedImageChange(e, this.props.type)}/>\n        <CommonHeaderComponent title={`Order - ${orders.orderDetails.orderDetail.orderNumber}`} enableBack={true}/>\n        <div className=\"order-card mt-neg-2\">\n          <div className=\"orders-body mt-1\">\n            <div className=\"row\">\n              <div className=\"col-xs-12\">\n                <div className=\" subtitle\">\n                  Status &nbsp; <span>{this.getVerifiedBtn(orders.orderDetails.orderDetail.status)}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"col-xs-6\">\n                <div className=\" subtitle\">\n                  Outlet\n                </div>\n                <div className=\" value\">\n                  {\n                    \n                    orders.orderDetails.orderDetail.fetchedStatus ? orders.orderDetails.orderDetail.outletName:\"fetching data\"\n                  }\n                </div>\n              </div>\n              <div className=\"col-xs-6\">\n                <div className=\"subtitle\">\n                  Phone #\n                </div>\n                <div className=\" value\">\n                  <FontAwesomeIcon icon=\"phone\" className=\"blue-text\"/> \n                  <a href={`tel:${(this.state.phones.length)>0?this.state.phones[0].phoneNumber:\"\"}`}> +91 {(this.state.phones.length)>0?this.state.phones[0].phoneNumber:\"\"}</a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-2\">\n              <div className=\"col-xs-6\">\n                <div className=\"subtitle\">\n                  Address\n                </div>\n                <div className=\"value\">\n                  {orders.orderDetails.orderDetail.outletAddress ? orders.orderDetails.orderDetail.outletAddress : '-'}\n                </div>\n              </div>\n              <div className=\"col-xs-6\">\n                <div className=\"subtitle\">\n                  Delivery Slot\n                </div>\n                <div className=\" value\">\n                  {orders.orderDetails.orderDetail.slotTime ? orders.orderDetails.orderDetail.slotTime : '-'}\n                </div>\n              </div>\n            </div>\n\n            \n            {/*CTA for verify delivery*/}\n            \n            {\n              showCommentAddBtn ?\n                <div className=\"fixed-verify-section flex-right z-highest order-card\"> \n\n                  <div className=\"align-right\">\n                    {\n                      this.props.remarkStatus == symbols.STATUS_BEGIN ? \n                      <div className=\"btn btn-green btn-sm\">\n                        <FontAwesomeIcon icon=\"spinner\" className=\"animate-spinner\"/>\n                      </div> :\n                      <div className={this.state.remark.trim() === '' ? \"btn btn-disabled btn-sm\" : \"btn btn-green btn-sm\"} onMouseDown={(e) => this.addRemark(e)}>Add Comment</div>\n                    }\n                  </div>\n                </div> : \n                <React.Fragment>\n                {\n                  orders.orderDetails.orderDetail.otpVerified ?\n                  <React.Fragment>\n                \n                  <div className=\"fixed-verify-section z-highest order-card\">\n                    <div className=\"btn btn-expand btn-disabled\">\n                      Already Delivered\n                    </div>\n                  </div>\n                  </React.Fragment>\n                  :\n                  <React.Fragment>\n                    <div className=\"fixed-verify-section z-highest order-card\"> \n                    <div className=\"btn btn-expand btn-green\"\n                      onClick={() => this.handleDeliverClick(orders.orderDetails.orderDetail.paymentMode, orders.orderDetails.orderDetail.orderNumber)}\n                    >\n                      Verify products\n                    </div>\n                  </div>\n                </React.Fragment>\n              }\n              </React.Fragment>\n            }\n            <div className=\"row\">\n              <div className=\"col-xs-12\">\n                <div className=\"order-photos mt-2\">\n                  <div className=\"subtitle\">\n                    Photos\n                  </div>\n                  <PhotoViewer\n                    parentClass=\"order-photo-wrapper\"\n                    className=\"order-photo-ele \"\n                    photos={orders.orderDetails.images}\n                    id={id}\n                    removeCross={true}\n                    name=\"imageUrl\"\n                    uploadImagesStatus={uploadImagesStatus}\n                    uploadImagesError={uploadImagesError}\n                    showRemoveImage={true}\n                    showPhotoViewer={true}\n                    removeImage={(e, index, imaegs, id) => this.props.actions.removeImage(e, index, orders.uploadedImages[id], id)}\n                    openPictureModeModal={() => this.openPictureModeModal()}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"order-photos mt-2\">\n              <div className=\"subtitle\">\n                Comments\n              </div>\n              {\n                orders.orderDetails.remarks.length > 0 && orders.orderDetails.remarks.map((ele, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <div className=\"mt-1\" >\n                        {ele.message}\n                      </div>\n                      <div className=\"mb-1 gray-text\">\n                        by {ele.userType}\n                      </div>\n                    </React.Fragment>\n                  )\n                })\n              }\n              <form className=\"mt-2 relative fs-14\">\n                <textarea\n                  onChange={(e) => this.handleCommentValue(e)}\n                  value={this.state.remark}\n                  id=\"add-comment\" \n                  onFocus={(e) => this.toggleCommentAddBtn(e)}\n                  onBlur={(e) => this.toggleCommentAddBtn(e)}\n                >\n                </textarea>\n                <label className={this.state.showCommentAddBtn || this.state.remark && this.state.remark !== '' ? \"animate-label up\" : \"animate-label\"}>\n                  <span className={this.state.showCommentAddBtn ? 'green-text' : ''}>Add comment</span>\n                </label>\n              </form>\n            </div>\n\n            <div className=\"light-line mt-2\"></div>\n                <div className=\"\">\n                  In case of any other issues feel free to &nbsp;<Call className=\"sushi-icon icon-fs-16 blue-text vertical-align-bottom\"/>\n                  <a href='tel:+911171565093' className=\"blue-link\"> Call Us</a>\n                </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    getOrdersStatus: state.statuses.getOrderDetails.status,\n    getOrdersError: state.statuses.getOrderDetails.error,\n    remarkStatus: state.statuses.addRemarks.status,\n    uploadImagesStatus: state.statuses.uploadImages.status,\n    uploadImagesError: state.statuses.uploadImages.error,\n    getPhonesStatus: state.statuses.getOrderPhones.status,\n    getPhonesError: state.statuses.getOrderPhones.error,\n    orderDetailImagesStatus: state.statuses.orderDetailImages.status,\n    orders: state.orders,\n    // status: state.statuses.login.status,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(OrderDetailComponent));\n","import React, { Component } from 'react';\nimport Searchbox from \"sushiweb/Searchbox\";\nimport Dropdown from \"sushiweb/Dropdown\";\nimport MenuItem from \"sushiweb/MenuItem\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass DropdownComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false\n    }\n  }\n\n  handleSelect(ele) {\n    this.setState({\n      selectedFilter: {\n        key: ele.key,\n        value: ele.value,\n        sendValue: ele.sendValue\n      },\n      showMenu: false\n    }, () => {\n      this.props.handleClick(this.state.selectedFilter)\n    });\n  }\n\n  listenEvent = (e) => {\n    let isEnableClick = (e.target.matches('.dropdown-wrapper') || e.target.matches('.dropdown-custom') || e.target.matches('.dropdown-head'));\n    if (!isEnableClick) {\n      this.setState({ showMenu: false });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.listenEvent)\n  }\n\n  componentWillUnmount() {\n\n    window.removeEventListener('click', this.listenEvent)\n  }\n\n  render() {\n    const { menu, defaultParam, primary } = this.props;\n    const { showMenu } = this.state;\n    return (\n      <React.Fragment>\n        <div className={primary ? `dropdown-wrapper dropdown-wrapper-primary ${this.props.className}` :  `dropdown-wrapper dropdown-filter-wrapper ${this.props.className}`} onClick={() => this.setState({showMenu: !this.state.showMenu})}>\n          <div className=\"dropdown-custom\">\n            <div className=\"dropdown-head\">{defaultParam.value}</div>\n            {\n              showMenu && \n              <div className=\"dropdown-content\">\n                {menu.map((ele, index) => {\n                    return(\n                      <div \n                        className={ele.value == defaultParam.value ? \"dropdown-ele active\" : \"dropdown-ele\"} \n                        onMouseDown={() => this.handleSelect(ele)}\n                        key={index}\n                      >{ele.value}</div>\n                    )\n                  })\n                }\n              </div>\n            }\n          </div>\n          <FontAwesomeIcon icon=\"chevron-down\" className=\"icon\"/>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default DropdownComponent;\n","import React, { Component } from 'react';\nimport Searchbox from \"sushiweb/Searchbox\";\nimport Dropdown from \"sushiweb/Dropdown\";\nimport MenuItem from \"sushiweb/MenuItem\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass CounterInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      countValue: 0\n    }\n  }\n  \n  componentDidMount() {\n    this.setState({countValue: this.props.defaultValue})\n  }\n  \n  componentDidUpdate(prevProps){\n    if(prevProps.defaultValue !== this.props.defaultValue) {\n      this.setState({countValue: this.props.defaultValue})\n    }\n  }\n\n  setCountValue(e){\n    const val = e.target.value;\n    let pattern = /^\\d+$/;\n    if(pattern.test(val) || val == ''){\n      this.setState({countValue: val});\n      this.props.getValue(val)\n    }\n  }\n\n  setBlurCountValue(e){\n    if(e.target.value == ''){\n      this.setState({countValue: 0});\n      this.props.getValue(0)\n    }\n  }\n\n  handleCounter(type){\n    if(type == 'inc'){\n      this.setState({countValue: this.state.countValue + 1})\n      this.props.getValue(this.state.countValue + 1)\n    } else if(type == 'dec' && this.state.countValue > 0 ) {\n      this.setState({countValue: this.state.countValue - 1})\n      this.props.getValue(this.state.countValue - 1)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input-counter input-field-wrap input-field-wrap-counter right\">\n        <div className={this.state.countValue == 0 ? \"decrement disable\" : \"decrement\"} onClick={() => this.handleCounter('dec')}>\n          <FontAwesomeIcon icon=\"minus\" />\n        </div>\n        <input \n          type=\"text\"\n          className=\"input-field__input input-field__input-counter\"\n          value={this.state.countValue}\n          onChange={(e) => this.setCountValue(e)}\n          onBlur={(e) => this.setBlurCountValue(e)}\n        />\n        <div className={this.state.countValue == this.props.max ? \"increment disable\" : \"increment\"} onClick={() => this.handleCounter('inc')}>\n          <FontAwesomeIcon icon=\"plus\" />\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default CounterInput;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport DropdownComponent from '../core/DropdownComponent';\nimport CounterInput from '../core/CounterInput';\nimport * as symbols from '../../operations/symbols';\nimport './orders.scss';\nimport * as constants from '../../operations/constants';\nimport OrderProductsComponent from \"./OrderProductsComponent\";\nimport * as actions from \"../../actions/ordersAction\";\nimport LoaderComponent from \"../core/LoaderComponent\";\nimport PictureModeModal from '../core/PictureModeModal';\nimport { PhotoMainViewer } from '../core/PhotoViewerComponent';\nimport moment from 'moment';\nclass ProductCardComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: { key: 0, value: 'None', sendValue: 0 },\n      quantityValue: '',\n      collapsed: [],\n      issue: null,\n      reasonWarning: false,\n      disableCardTrack: [],\n      currentCardId: null,\n      photos: [],\n      openPictureModeModal: false,\n      uploadedImages: [],\n      hasIssueId: false,\n      issueId: null,\n      imageWarning: false,\n      finalUpdatedValue: null\n\n    }\n  }\n\n  handleIssueChange() {\n    const val = this.state.quantityValue;\n    if (val < this.props.product.quantityDispatched) {\n      this.setState(prevState => ({\n        issue: {\n          ...this.props.product.issue,\n          reasonId: this.state.selectedFilter.sendValue,\n          quantityDelivered: parseFloat(val)\n        },\n      }))\n    } else if (val === this.props.product.quantityDispatched) {\n      this.setState({ issue: {} })\n    }\n  }\n\n  getValue(val) {\n    this.setState({ quantityValue: val }, () => this.handleIssueChange())\n  }\n\n  componentDidMount() {\n    let val = this.props.product.quantityDispatched;\n    let selectedFilter = { key: 0, value: 'None', sendValue: 0 };\n    if (this.props.product.issue !== null) {\n      val = this.props.product.issue.quantityDelivered;\n      const issueReason = this.props.reasons.find((ele) => ele.key === this.props.product.issue.reasonId);\n      if (issueReason) {\n        selectedFilter = issueReason\n      }\n    }\n\n    let uploadedImages = this.props.product.issue ? [...this.props.product.issue.images] : []\n    uploadedImages.reverse();\n    this.setState({\n      quantityValue: val,\n      selectedFilter,\n      issueId: this.props.product.issue ? this.props.product.issue.issueId : null,\n      finalUpdatedValue: val,\n      issue: this.props.product.issue,\n      uploadedImages\n    })\n  }\n\n  setQuantityValue(e) {\n    if (e.target.value <= this.props.product.quantityDispatched) {\n      this.setState({ quantityValue: (e.target.value) }, () => this.handleIssueChange());\n    }\n  }\n\n  setBlurQunatityValue(e) {\n    if (e.target.value === '') {\n      this.setState({ quantityValue: (this.props.product.quantityDispatched) }, () => this.handleIssueChange());\n    }\n  }\n\n  handleReasonSelect(reason) {\n    this.setState({ selectedFilter: reason, reasonWarning: false }, () => this.handleIssueChange())\n  }\n\n  clearAddPhotos() {\n    this.setState({ photos: [] })\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { saveProductIssuesStatus, orders, product, deleteProductIssuesStatus } = this.props;\n    if (this.props.isOpen && orders && saveProductIssuesStatus !== prevProps.saveProductIssuesStatus && saveProductIssuesStatus === symbols.STATUS_DONE) {\n      this.closeCard();\n\n      const uploadedImages = [...this.state.uploadedImages];\n      for (let i in this.state.photos) {\n        uploadedImages.unshift({ url: URL.createObjectURL(this.state.photos[i]) })\n      }\n      this.setState({ uploadedImages, imageWarning: false, reasonWarning: false, finalUpdatedValue: this.state.quantityValue }, () => {\n        this.clearAddPhotos()\n      })\n    }\n    if (product.issue != prevProps.product.issue) {\n      this.setState({ issue: product.issue })\n    }\n    if (deleteProductIssuesStatus !== prevProps.deleteProductIssuesStatus && deleteProductIssuesStatus === symbols.STATUS_DONE) {\n      this.closeCard();\n      if (this.props.product.id == this.props.orders.deletedProductId)\n        this.setState({\n          uploadedImages: [],\n          issue: null,\n          imageWarning: false,\n          reasonWarning: false,\n          issueId: null,\n          finalUpdatedValue: null,\n          selectedFilter: { key: 0, value: 'None', sendValue: 0 }\n        }, () => {\n          this.clearAddPhotos()\n        })\n    }\n  }\n\n  toggleCard(openOnly) {\n    if (openOnly && !this.props.isOpen) {\n      this.props.setIsOpen(this.props.product.id);\n      return\n    }\n    if ((this.state.issue === null || Object.keys(this.state.issue).length == 0) && this.state.quantityValue == this.props.product.quantityDispatched) {\n      this.props.setIsOpen(this.props.product.id);\n      return\n    }\n\n  }\n\n\n  closeCard() {\n    this.props.setClose();\n  }\n\n  toggleDefaultStateCard() {\n    if (this.props.isOpen) {\n      this.props.setClose();\n      return\n    }\n    this.props.setIsOpen(this.props.product.id);\n  }\n\n  getIssueId(id) {\n    this.setState(prevState => ({\n      issueId: id\n    }))\n  }\n\n  removeImage(e, currIndex) {\n    let photos = [...this.state.photos];\n    photos = photos.filter((ele, index) => {\n      if (currIndex !== index) {\n        return true\n      }\n    })\n    this.setState({ photos })\n  }\n\n  openPictureModeModal() {\n    this.setState({ openPictureModeModal: true, imageWarning: false })\n  }\n\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  handleIssueSubmit(e) {\n    e.stopPropagation();\n    this.toggleCard(true);\n    const productId = this.props.product.id;\n\n    this.setState({ currentCardId: this.props.product.id })\n    if (!this.props.isOpen) {\n      return\n    }\n    if (this.state.selectedFilter.key === 0 && this.state.quantityValue < this.props.product.quantityDispatched) {\n      this.setState({ reasonWarning: true });\n      return;\n    }\n\n\n    if (this.state.uploadedImages.length == 0 && this.state.photos.length == 0 && this.state.quantityValue < this.props.product.quantityDispatched) {\n      let flag = 0;\n      this.props.reasons.map((ele) => {\n        if (ele.sendValue === this.state.selectedFilter.sendValue && ele.rules && ele.rules.indexOf(constants.REASON_RULE_PHOTO_MANDATE) != -1) {\n          this.setState({ imageWarning: true });\n          flag = 1;\n        }\n      })\n\n      if (flag == 1) {\n        return;\n      } else {\n        this.setState({ imageWarning: false });\n      }\n\n    }\n\n    let issueId = null;\n\n    //only useful for first reload\n    if (this.props.product.issue) {\n      issueId = this.props.product.issue.issueId;\n    }\n\n    //this will update issueId after subsequent calls - will keep issueId as null after delete which will override the issueId set above from first reload state\n    if (this.props.orders.updatedProductIssue[productId] || this.props.orders.deletedProductId == productId) {\n      issueId = this.props.orders.updatedProductIssue[productId];\n    }\n\n    if (!issueId && this.state.quantityValue == this.props.product.quantityDispatched) {\n      this.closeCard();\n      return;\n    }\n    let payload = {};\n    // payload.orderId = this.props.match.params.id;\n    // payload.productId = this.props.product.id;\n    // payload.issues = this.state.issue;\n    // payload.singleUpdate = true;\n    const formData = new FormData();\n    if (this.state.issue) {\n\n      formData.append('reasonId', this.state.issue.reasonId);\n      formData.append('quantityDelivered', this.state.issue.quantityDelivered);\n      for (let i = 0; i < this.state.photos.length; i++) {\n        formData.append('files', this.state.photos[i]);\n      }\n    }\n\n    // payload.files = formData;\n    if (this.state.quantityValue < this.props.product.quantityDispatched) {\n      this.props.setIssue(this.props.product.id, this.state.issue)\n    } else {\n      this.props.deleteIssue(this.props.product.id)\n    }\n\n\n    if (this.state.quantityValue == this.props.product.quantityDispatched && issueId) {\n      this.props.actions.deleteProductIssues(this.props.product.id, this.props.match.params.id, issueId)\n    } else {\n      this.props.actions.saveProductIssues(formData, this.props.product.id, this.props.match.params.id, issueId)\n    }\n\n  }\n\n  setImages(files) {\n    this.closePictureModeModal();\n    const photos = [...this.state.photos];\n    for (let i = 0; i < files.length; i++) {\n      photos.push(files[i])\n    }\n    this.setState({ photos })\n  }\n\n  render() {\n    const { product, staticCard } = this.props;\n    const {\n      quantityValue,\n      currentCardId,\n      openPictureModeModal,\n      closePictureModeModal,\n      isOpen\n    } = this.state;\n\n    let shadowClass = '';\n    if(this.props.isOpen){\n      shadowClass = 'shadow'\n    }\n    // let uploadedImages = [...this.state.uploadedImages];\n    return (\n      <div className={\n        this.props.allReset || this.props.isOpen ? `product-card mt-1 ${shadowClass}` : `product-card mt-1 product-card-disable ${shadowClass}`\n        }\n      >\n        <PictureModeModal\n          isOpen={openPictureModeModal}\n          hasNotWrapper={true}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          hasSameRoute={true}\n          default={true}\n          setImages={(files) => this.setImages(files)}\n        />\n        <div className=\"product-title\">\n          <div className=\"name mr-1\"> {product.skuName} \n          {\n            !this.props.isOpen && this.state.uploadedImages && this.state.uploadedImages.length > 0 && \n            <div className=\"sub-title-msg\">\n            <FontAwesomeIcon icon=\"camera\" />&nbsp; \n              {this.state.uploadedImages.length} photo\n              {this.state.uploadedImages.length > 1 ? 's' : ''} uploaded\n            </div>\n          }\n          </div>\n          {\n            !this.props.isOpen ?\n              <React.Fragment>\n                <span className=\"qty mr-1\">\n                  {\n                    (this.state.finalUpdatedValue || this.state.finalUpdatedValue === 0) && (product.quantityDispatched != this.state.finalUpdatedValue) ?\n                    <span className=\"line-through gray-text\">\n                      {product.quantityDispatched}\n                    </span> : null\n                  }\n\n                 &nbsp; <b>{quantityValue} {product.measurementUnit}</b>\n                </span>\n                <div className=\"flex flex-vertical-align\" onClick={(e) => this.handleIssueSubmit(e)}>\n                  <span className=\"green-text mr-1\">Edit</span>\n                  <FontAwesomeIcon icon=\"angle-down\" className=\"gray-text qty\"/>\n                </div>\n              </React.Fragment>\n              :\n              this.props.saveProductIssuesStatus === symbols.STATUS_BEGIN && this.props.isOpen ?\n                <div className=\"btn btn-green-small btn-transparent-green\">\n                  Saving\n                </div>\n                :\n                <div className=\"btn btn-white btn-card-small\" onClick={(e) => this.handleIssueSubmit(e)}>\n                  Done\n                </div>\n          }\n        </div>\n        <div className={this.props.isOpen ? \"orders-body\" : \"collapsed-body\"}>\n          {\n            \n            <div>\n              <div className=\"light-line\"/>\n              <div className=\"row\">\n                <div className=\"col-xs-6 subtitle\">\n                  Quantity Ordered\n                </div>\n                <div className=\"col-xs-6 align-right right-value\">\n                  <b>{product.quantityOrdered} {product.measurementUnit !== 'count' && product.measurementUnit}</b>\n                </div>\n              </div>\n              <div className=\"row mt-1\">\n                <div className=\"col-xs-7 subtitle\">\n                  Quantity Dispatched\n                </div>\n                <div className=\"col-xs-5 align-right right-value\">\n                  <b>{product.quantityDispatched} {product.measurementUnit !== 'count' && product.measurementUnit}</b>\n                </div>\n              </div>\n              {\n                !staticCard &&\n                <div className=\"row mt-1\">\n                  <div className=\"col-xs-6 subtitle\">\n                    Quantity Delivered\n                  </div>\n                  <div className=\"col-xs-6 align-right right-value\">\n                    {\n                      product.measurementUnit === 'count' ?\n                        <CounterInput\n                          min={0}\n                          defaultValue={quantityValue}\n                          max={product.quantityDispatched}\n                          getValue={(val) => this.getValue(val)}\n                        /> :\n                        <div className=\"input-counter input-field-wrap input-field-wrap-counter right\">\n                          <input\n                            type=\"text\"\n                            className=\"input-field__input input-field__input-quantity\"\n                            value={quantityValue}\n                            onChange={(e) => this.setQuantityValue(e)}\n                            placeholder=\"Enter\"\n                            onBlur={(e) => this.setBlurQunatityValue(e)}\n                            max={10}\n                          />\n                        </div>\n                    }\n                    <div className=\"clearfix\"/>\n                  </div>\n                </div>\n              }\n              \n              {\n                !staticCard &&\n                <div className=\"mt-1 row\">\n                  <div className={`${this.state.reasonWarning && this.state.quantityValue < this.props.product.quantityDispatched? \"red-text col-xs-12\" : \"col-xs-12\"}`}><b>Select issue</b>\n                  </div>\n                  <div className=\"col-xs-12\">\n                    <DropdownComponent\n                      history={this.props.history}\n                      primary={true}\n                      className={this.state.reasonWarning ? 'red flex-margin z-highest small-content' : 'flex-margin z-highest small-content'}\n                      menu={this.props.reasons}\n                      defaultParam={this.state.selectedFilter}\n                      handleClick={(param) => this.handleReasonSelect(param)}\n                    />\n                  </div>\n                </div>\n              }\n              <div className=\"order-photos mt-2\">\n                <div className={this.state.imageWarning ? \"red-text subtitle\" : \"subtitle\"}>\n                  <b>Add Photos</b>\n                </div>\n                <div className=\"horizontal-scroll\">\n                \n                <div className=\"order-photo-wrapper\">\n                  <div \n                    className={this.state.imageWarning ? \"gallery-item order-photo-ele order-photo-placeholder red-order-photo-placeholder\" : \"gallery-item order-photo-ele order-photo-placeholder\"}\n                    onClick={() => this.openPictureModeModal()}\n                  >\n                      <FontAwesomeIcon icon=\"camera\" />\n                  </div>\n                </div>\n                {\n                  this.state.photos && this.state.photos.map((ele, index) => {\n                    return(\n                      <div className=\"order-photo-wrapper\">\n                          <div className=\"cross-image\" onClick={(e) => this.removeImage(e, index)}>\n                              <FontAwesomeIcon icon=\"times\" />\n                          </div>\n                          <div className={`gallery-item order-photo-ele`} style={{'backgroundImage': 'url('+URL.createObjectURL(ele)+')'}}></div>\n                      </div>\n                    )     \n                  })\n                }\n                {\n                  this.state.uploadedImages\n                  && this.state.uploadedImages.length > 0 &&\n                  <div className=\"inline-block \">\n                    <PhotoMainViewer\n                      parentClass=\"order-photo-wrapper\"\n                      className=\"order-photo-ele \"\n                      photos={this.state.uploadedImages}\n                      name=\"url\"\n                      mainClassName=\"\"\n                      openPictureModeModal={() => this.openPictureModeModal()}\n                    />\n                  </div>\n                }\n                \n                </div>\n\n              </div>\n            </div>\n          }\n        </div> \n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    saveProductIssuesStatus: state.statuses.saveProductIssues.status,\n    saveProductIssuesError: state.statuses.saveProductIssues.error,\n    deleteProductIssuesStatus: state.statuses.deleteProductIssues.status,\n    deleteProductIssuesError: state.statuses.deleteProductIssues.error,\n    orders: state.orders,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(ProductCardComponent));\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/ordersAction\";\nimport { bindActionCreators } from 'redux';\nimport ProductCardComponent from \"./ProductCardComponent\";\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as symbols from \"../../operations/symbols\";\nimport LoaderComponent from '../core/LoaderComponent';\nimport Search from \"sushiweb/Icons/all/Search\";\nimport { symbol } from \"prop-types\";\nimport PictureModeModal from '../core/PictureModeModal';\n\nclass OrderProductsComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [],\n      hasNoSearchResult: false,\n      reasons: [],\n      issues: {},\n      totalItems: 0,\n      issueItems: 0,\n      isOpen: [],\n      allReset: true,\n      toggleDownWrapper: false, //toggle it with isOpen\n      showInvoiceModal: false\n    }\n  }\n\n  setIssue = (orderProductId, issue) => {\n    var issues = this.state.issues;\n    issues[[orderProductId]] = issue;\n    this.setState({ issues, issueItems: Object.keys(issues).length })\n  };\n\n\n  deleteIssue = (orderProductId) => {\n    var issues = this.state.issues;\n    delete issues[[orderProductId]];\n    this.setState({ issues, issueItems: Object.keys(issues).length })\n  };\n\n  setSearchVal(e) {\n    const { products } = this.state;\n    if (e.target.value != '') {\n      const tempProducts = this.props.orders.orderProducts.filter((ele, index) => {\n        if (ele.skuName.toLowerCase().includes(e.target.value.toLowerCase())) {\n          return ele\n        }\n      });\n      this.setState({ products: tempProducts, hasNoSearchResult: false })\n    } else {\n      this.setState({\n        products: this.props.orders.orderProducts,\n        hasNoSearchResult: true\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.props.actions.getAllIssueReasons('productIssue');\n    this.props.actions.getOrderProducts(this.props.match.params.id)\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { getAllIssueReasonsStatus, orders, getOrderProductsStatus } = this.props;\n    if (orders.reasons && getAllIssueReasonsStatus !== prevProps.getAllIssueReasonsStatus && getAllIssueReasonsStatus === symbols.STATUS_DONE) {\n      var reasons = orders.reasons.map((ele) => ({ key: ele.id, value: ele.name, sendValue: ele.id, rules: ele.rules }));\n      reasons.push({ key: 0, value: 'None', sendValue: 0, rules: null });\n      this.setState({ reasons })\n    }\n    if (orders.orderProducts && getOrderProductsStatus !== prevProps.getOrderProductsStatus && getOrderProductsStatus === symbols.STATUS_DONE) {\n      orders.orderProducts.forEach((ele) => {\n        if (ele.issue !== null && ele.issue.quantityDelivered < ele.quantityDispatched) { this.setIssue(ele.id, ele.issue) }\n      });\n      this.setState({ products: orders.orderProducts, totalItems: orders.orderProducts.length })\n      const isOpen = [];\n      for (let i in orders.orderProducts) {\n        isOpen[orders.orderProducts[i].id] = false;\n      }\n\n      this.setState({ isOpen })\n    }\n  }\n\n  handleOnSubmit() {\n    let invoiceImages = this.props.location.state.images;\n    if(invoiceImages.length=== 0){\n      this.setState({showInvoiceModal: true})\n    } else {\n      const id = this.props.match.params.id;\n      this.props.history.push({\n        pathname: '/order/' + id + \"/invoice\",\n        state: { id, images: invoiceImages, orderNumber: this.props.location.state.orderNumber }\n      })\n    }\n\n  }\n\n  setIsOpen(id) {\n    let isOpen = [...this.state.isOpen];\n    if (isOpen[id] == true) {\n      isOpen[id] = false;\n      this.setState({ allReset: false })\n    } else {\n      for (let i in isOpen) {\n        isOpen[i] = false;\n      }\n      isOpen[id] = true;\n    }\n    this.setState({ allReset: false })\n    this.setState({ isOpen, toggleDownWrapper: true })\n  }\n\n  setClose() {\n    let isOpen = [...this.state.isOpen];\n    for (let i in isOpen) {\n      isOpen[i] = false;\n    }\n    this.setState({ allReset: true })\n    this.setState({ isOpen, toggleDownWrapper: false })\n  }\n\n  closePictureModeModal(){\n    this.setState({showInvoiceModal: false})\n  }\n\n\n\n  render() {\n    const id = this.props.match.params.id;\n    const { hasNoSearchResult, showInvoiceModal } = this.state;\n    return (\n      <div className='pd-top-global gray-wrap mh-100'>\n        <PictureModeModal\n          isOpen={showInvoiceModal}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          id={id}\n          orderNumber={this.props.location.state.orderNumber}\n          type={'invoice'}\n          title = {'Upload Invoice'}\n          images={this.props.location.state.images}\n          redirectedURL={`/order/${id}/invoice`}\n          modalBody={() => {\n            return <div className=\"center mt-neg-2\"> \n              <p className=\"fs-16 mb-2 align-left\">\n                Please take an image of the invoice and make sure that the amount and items are clearly visible\n              </p>\n              <img src=\"../../images/invoiceSample.png\" />\n             </div>\n          }}\n        />\n        {\n          !this.props.location.state ?\n          <div>\n            <CommonHeaderComponent title={`Products`} enableBack={true}/>\n            <div className=\"pd-top-global fs-18 red-text center\">\n              Unauthorized!!!\n            </div>\n          </div>\n          :\n          this.props.getAllIssueReasonsStatus === symbols.STATUS_BEGIN || this.props.getOrderProductsStatus ===\n          symbols.STATUS_BEGIN || this.props.saveProductIssuesStatus === symbols.STATUS_BEGIN ?\n          <LoaderComponent/>\n          :\n          <div>\n            <div className=\"order-top-header \">\n              <div className=\"input-field-wrap\">\n                <input\n                  type=\"text\"\n                  className=\"input-field__input search-input search-input--left-icon\"\n                  placeholder=\"Search Products\"\n                  onChange={(e) => this.setSearchVal(e)}\n                />\n                <div className=\"search-icon\">\n                  <Search className=\"icon-color-gray icon-fs-15\"/> \n                </div>\n              </div>\n            </div>\n            <CommonHeaderComponent title={`${this.props.location.state.orderNumber} - Products`} enableBack={true}/>\n            <div className='pd-bottom-global'>\n              <React.Fragment>\n                {\n                  this.state.products.map((ele) => <ProductCardComponent \n                    key={ele.id}\n                    history={this.props.history}\n                    product={ele}\n                    reasons={this.state.reasons}\n                    allReset={this.state.allReset}\n                    setIssue={this.setIssue}\n                    deleteIssue={this.deleteIssue}\n                    setIsOpen={(id) => this.setIsOpen(id)}\n                    setClose={() => this.setClose()}\n                    isOpen={this.state.isOpen[ele.id]}/>)\n                }\n                {\n                  this.state.products.length === 0 &&\n                  <div className=\"warning fs-14 red-text\">Products not found</div>\n                }\n              </React.Fragment>\n            </div>\n            <div className={this.state.toggleDownWrapper ? \n              \"order-card fixed-verify-section z-highest toggleDown\" :\n              \"order-card fixed-verify-section z-highest\"}\n            >\n              <div className=\"\">\n                Total Items: <b>{this.state.totalItems}</b> <br/>\n                Upd. Items: <b>{this.state.issueItems} </b>\n              </div>\n              <div\n                className={\"btn btn-green-flat btn-green \"}\n                onClick={() => this.handleOnSubmit()}\n              >\n                Complete Verification\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    getAllIssueReasonsStatus: state.statuses.getAllIssueReasons.status,\n    getAllIssueReasonsError: state.statuses.getAllIssueReasons.error,\n    getOrderProductsStatus: state.statuses.getOrderProducts.status,\n    getOrderProductError: state.statuses.getOrderProducts.error,\n    orders: state.orders,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(OrderProductsComponent));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport DropdownComponent from '../core/DropdownComponent';\nimport CounterInput from '../core/CounterInput';\nimport * as symbols from '../../operations/symbols';\nimport './orders.scss';\nimport OrderProductsComponent from \"./OrderProductsComponent\";\n\nclass ProductVerifyCardComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: { key: 'abc', value: 'abc', sendValue: 'abc' },\n      quantityValue: ''\n    }\n\n  }\n\n  getValue(val) {\n    this.setState({ quantityValue: val })\n  }\n\n  componentDidMount() {\n    this.setState({ quantityValue: this.props.product.quantityOrdered })\n  }\n\n  setQuantityValue(e) {\n    this.setState({ quantityValue: e.target.value });\n  }\n\n  render() {\n    const { product } = this.props;\n    let qtyDelivered = product.issue !== null ? product.issue.quantityDelivered : product.quantityDispatched;\n    const netGst = product.pricePerUnit * (qtyDelivered) * product.gstRate / 100;\n    const totalPrice = product.pricePerUnit * (qtyDelivered) + netGst;\n    return (\n      <div className=\"order-card product-card mt-2\">\n        <div className=\"product-title\">\n            <b> {product.skuName} </b>\n        <div className=\"clearfix\" />\n        </div>\n        <div className=\"light-line\" />\n        <div className=\"orders-body products-verify-body\">\n          <div className=\"row\">\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Quantity<br/> Ordered\n                </div>\n                <div className=\"value\">\n                  {product.quantityOrdered} { product.unit !== 'count' && product.unit }\n                </div>\n            </div>\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Quantity<br/> Dispatched\n                </div>\n                <div className={\"value\"}>\n                  {product.quantityDispatched} { product.unit !== 'count' && product.unit }\n                </div>\n            </div>\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Quantity<br/> Accepted\n                </div>\n                <div className={qtyDelivered<product.quantityDispatched?\"value red-text\":\"value\"}>\n                  {qtyDelivered} { product.unit !== 'count' && product.unit }\n                </div>\n            </div>\n          </div>\n          <div className=\"row mt-2 mb-1\">\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Price/Unit\n                </div>\n                <div className=\"value\">\n                  &#8377; {product.pricePerUnit}\n                </div>\n            </div>\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Taxes\n                </div>\n                <div className=\"value\">\n                  {netGst}\n                </div>\n            </div>\n            <div className=\"col-xs-4\">\n                <div className=\"subtitle\">\n                  Total Price\n                </div>\n                <div className=\"value\">\n                  <b> &#8377; {totalPrice} </b>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProductVerifyCardComponent;\n","import React, {Component} from 'react';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../actions/ordersAction\";\nimport {bindActionCreators} from 'redux';\nimport ProductVerifyCardComponent from \"./ProductVerifyCardComponent\";\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport * as symbols from \"../../operations/symbols\";\nimport LoaderComponent from \"../core/LoaderComponent\";\n\nclass VerifyOrderComponent extends Component {\n  \n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      orderDetails: {\n        originalPrice: 0,\n        updatedPrice: 0\n      }\n    }\n    \n  }\n  \n  componentDidMount() {\n    this.props.actions.getOrderProducts(this.props.match.params.id)\n  }\n  \n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {orders, getOrderProductsStatus} = this.props;\n    if (orders.orderProducts && getOrderProductsStatus !== prevProps.getOrderProductsStatus && getOrderProductsStatus === symbols.STATUS_DONE) {\n      \n      let totalOriginalPrice = 0;\n      let totalUpdatedPrice = 0;\n      orders.orderProducts.forEach((ele) => {\n        const netGstOrdered = ele.pricePerUnit * (ele.quantityDispatched) * ele.gstRate / 100;\n        const grossPriceOrdered = ele.pricePerUnit * (ele.quantityDispatched) + netGstOrdered;\n        \n        let qtyDelivered = ele.issue !== null ? ele.issue.quantityDelivered : ele.quantityDispatched;\n        \n        const netGstUpdated = ele.pricePerUnit * (qtyDelivered) * ele.gstRate / 100;\n        const grossPriceUpdated = ele.pricePerUnit * (qtyDelivered) + netGstUpdated;\n        \n        totalOriginalPrice += grossPriceOrdered;\n        totalUpdatedPrice += grossPriceUpdated;\n      });\n      this.setState({\n        products: orders.orderProducts,\n        orderDetails: {originalPrice: totalOriginalPrice, updatedPrice: totalUpdatedPrice}\n      })\n    }\n  }\n  \n  handleVerifyCLick() {\n    const id = this.props.match.params.id;\n    \n    if (this.props.location.state && this.props.location.state.paymentMode === 'COD') {\n      this.props.history.push({\n        pathname: '/order/' + id + \"/cod\",\n        state: {cash: this.state.orderDetails.updatedPrice , orderNumber:this.props.location.state.orderNumber}\n      })\n    } else {\n      this.props.history.push({\n        pathname: '/order/' + id + \"/verifyDelivery\",\n        state: {orderNumber:this.props.location.state.orderNumber}\n      })\n    }\n  }\n  \n  render() {\n    const id = this.props.match.params.id;\n    return (\n      <div>\n        {\n          !this.props.location.state ?\n            <div>\n              <CommonHeaderComponent title={`Products`} enableBack={true}/>\n              <div className=\"pd-top-global fs-18 red-text center\">\n                Unauthorized!!!\n              </div>\n            </div>\n            :\n            <div>\n              <CommonHeaderComponent title={`${this.props.location.state.orderNumber} - Products`} enableBack={true}/>\n              {\n                this.props.getOrderProductsStatus === symbols.STATUS_BEGIN ?\n                  <div className='pd-top-global'>\n                    <LoaderComponent/>\n                  </div>\n                  :\n                  <div className='pd-top-global gray-wrap pd-bottom-global mh-100'>\n                    <div className=\" verify-top-header\">\n                      <div className=\"fs-14 vertical-align-middle\">Have issues?</div>\n                      <div\n                        className=\"btn btn-green-flat btn-green\"\n                        onClick={() => this.props.history.push({\n                          pathname: '/order/' + id + '/products',\n                          state: {orderNumber:this.props.location.state.orderNumber}\n                        })}\n                      >\n                        Record Issues\n                      </div>\n                    </div>\n                    <React.Fragment>\n                      {\n                        this.state.products.map((ele) =>\n                          <ProductVerifyCardComponent\n                            product={ele}\n                            key={ele.id}\n                          />\n                        )\n                      }\n                    </React.Fragment>\n                    <div className=\"order-card mt-2\">\n                      <div\n                        className={\"btn btn-expand btn-green \"}\n                        onClick={() => this.props.history.push({\n                          pathname: '/order/' + id + '/products',\n                          state: {orderNumber:this.props.location.state.orderNumber}\n                        })}\n                      >\n                        Record Issues\n                      </div>\n                    </div>\n                    <div className=\"order-card fixed-verify-section\">\n                      <div className=\"\">\n                        Org. Price: <b>&#8377;{this.state.orderDetails.originalPrice}</b> <br/>\n                        Upd. Price: <b>&#8377;{this.state.orderDetails.updatedPrice} </b>\n                      </div>\n                      <div\n                        className={\"btn btn-green-flat btn-green \"}\n                        onClick={() => this.handleVerifyCLick()}\n                      >\n                        Mark Delivered\n                      </div>\n                    </div>\n                  </div>\n              }\n            </div>\n        }\n      </div>\n    )\n  }\n  \n}\n\nexport default withRouter(connect(\n  state => ({\n    getOrderProductsStatus: state.statuses.getOrderProducts.status,\n    getOrderProductError: state.statuses.getOrderProducts.error,\n    orders: state.orders,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(VerifyOrderComponent));\n\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport * as actions from \"../../actions/ordersAction\";\nimport { bindActionCreators } from 'redux';\nimport * as symbols from \"../../operations/symbols\";\nimport LoaderComponent from \"../core/LoaderComponent\";\n\nclass PhoneListComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phones: [],\n      selectedPhone: null,\n      noPhonesData: false,\n      prodEnv: false\n    }\n  }\n\n  componentDidMount() {\n    if (!process.env.REACT_APP_API_ENDPOINT && process.env.NODE_ENV === 'production') {\n      this.setState({ prodEnv: true });\n      this.props.actions.getOrderPhones(this.props.match.params.id);\n\n    } else {\n      this.setState({ selectedPhone: this.props.user && this.props.user.phone })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { getPhonesStatus, orders, sendDeliveryOtpStatus } = this.props;\n    if (orders.orderPhones && getPhonesStatus !== prevProps.getPhonesStatus && getPhonesStatus === symbols.STATUS_DONE) {\n      this.setState({ phones: orders.orderPhones })\n    }\n    if (getPhonesStatus !== prevProps.getPhonesStatus && getPhonesStatus === symbols.STATUS_FAIL) {\n      this.setState({ noPhonesData: true })\n    }\n    if (sendDeliveryOtpStatus !== prevProps.sendDeliveryOtpStatus && sendDeliveryOtpStatus === symbols.STATUS_DONE) {\n      this.props.sendOtpDone(this.state.selectedPhone)\n    }\n\n  }\n\n  handlePhoneClick() {\n    this.props.actions.sendDeliveryOtp({ phoneNumber: this.state.selectedPhone, orderId: parseInt(this.props.match.params.id) })\n  }\n\n  handleOptionChange(val) {\n    this.setState({ selectedPhone: val })\n  }\n\n  render() {\n    return (\n      this.props.sendDeliveryOtpStatus === symbols.STATUS_BEGIN ?\n      <LoaderComponent/> :\n      <div className='mh-100'>\n        {\n          this.state.noPhonesData ?\n            <div className=\"phone-card fs-14 pd-top-20\">\n              <div className=\"mb-2 red-text\">No Phones Mapped!!!</div>\n              Please ask the merchant to contact Hyperpure (+91 11 71565093 / help@hyperpure.com)\n            </div>\n            :\n            <form>\n            {\n              this.state.prodEnv ?\n              <React.Fragment>\n              {\n                this.state.phones.map((ele, index) =>\n                  <label className=\"input-radio-wrapper mb-2 fs-14\">\n                    <div className=\"label-wrap\">\n                      <input \n                        type=\"radio\"\n                        value=\"option1\" \n                        checked={this.state.selectedPhone === ele.phoneNumber} \n                        onChange={() => this.handleOptionChange(ele.phoneNumber)}\n                      />\n                      <div className=\"checked\"></div>\n                    </div>\n                    <span className=\"phone-title\">\n                      {ele.name}\n                      <div className=\"right okra-med\">{ele.phoneNumber}</div>\n                      <div className=\"clearfix\"/>\n                     </span>\n                  </label>\n                )\n              }\n              </React.Fragment>\n              : <label className=\"input-radio-wrapper mb-2 fs-14\">\n                <div className=\"label-wrap\">\n                  <input \n                    type=\"radio\"\n                    value=\"option1\" \n                    checked={true} \n                    onChange={() => this.handleOptionChange(this.props.user && this.props.user.phone)}\n                  />\n                  <div className=\"checked\"></div>\n                </div>\n                  <span className=\"phone-title\">\n                    Self (for testing)\n                    <div className=\"right okra-med\">{this.props.user && this.props.user.phone}</div>\n                    <div className=\"clearfix\"/>\n                   </span>\n              </label>\n            }\n            \n          <div className=\"order-card fixed-verify-section z-highest\">\n              <div\n                className={this.state.selectedPhone ? \"btn btn-green-flat btn-expand btn-green\":  \"btn btn-green-flat btn-expand btn-disabled\"  }\n                onClick={() => this.handlePhoneClick()}\n              >\n                Send OTP\n              </div>\n            </div>\n          </form>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    getPhonesStatus: state.statuses.getOrderPhones.status,\n    getPhonesError: state.statuses.getOrderPhones.error,\n    sendDeliveryOtpStatus: state.statuses.sendDeliveryOtp.status,\n    sendDeliveryOtpError: state.statuses.sendDeliveryOtp.error,\n    orders: state.orders,\n    user: state.auth.user\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(PhoneListComponent));\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { validateRegisterOTP } from '../../operations/form-validation/formValidation';\nimport * as actions from \"../../actions/ordersAction\";\nimport Input from \"sushiweb/InputTypes/Input\";\nimport Check from \"sushiweb/Icons/all/Check\";\nimport * as symbols from '../../operations/symbols';\nimport OTPFieldComponent from './../core/OTPFieldComponent/OTPFieldComponent';\n\nclass DeliveryOTPComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      otp: {\n        fields: {\n          otp: '',\n          orderId: ''\n        },\n        errors: {\n          otp: null\n        }\n      },\n      validations: {\n        otp: null,\n      },\n      allValidated: false,\n      validationFailed: false,\n      resetSetTimeout: false\n    }\n  }\n\n  handleChange(type, field, value) {\n    this.setState(prevState => ({\n      [type]: {\n        errors: {\n          ...prevState[type].errors,\n        },\n\n        fields: {\n          ...prevState[type].fields,\n          [field]: value\n        }\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  beginValidation(type, field, value) {\n    this.setState(prevState => ({\n      validations: {\n        ...prevState.validations,\n        [field]: true\n      }\n    }), () => {\n      this.validateThisField(type, field, value);\n    })\n  }\n\n  validateThisField(type, field, value) {\n    var errList = validateRegisterOTP(this.state[type]);\n    var err = errList[field];\n    this.setState(prevState => ({\n      [type]: {\n        ...prevState[type],\n        errors: {\n          ...prevState[type].errors,\n          [field]: err\n        }\n      },\n      allValidated: errList.isValidated\n    }))\n  }\n\n  resendOtp(onCall) {\n    let otpFields = {};\n    if (onCall) {\n      otpFields.voice = true;\n    }\n    otpFields.phoneNumber = this.props.phoneNumber\n    this.setState({ resetSetTimeout: true });\n    setTimeout(() => {\n      this.setState({ resetSetTimeout: false });\n    }, 15000);\n    otpFields.orderId = parseInt(this.props.match.params.id)\n    this.props.actions.resendDeliveryOtp(otpFields)\n  }\n\n  onSubmitOTP(e) {\n    e.preventDefault();\n    let otpValidatedData = validateRegisterOTP(this.state.otp);\n    if (!otpValidatedData.isValidated) {\n      this.setState(prevState => ({\n        otp: {\n          ...prevState.otp,\n          errors: otpValidatedData\n        }\n      }))\n    } else {\n      this.setState(prevState => ({\n        otp: {\n          ...prevState.otp,\n          errors: {}\n        }\n      }), () => {\n        let otpFields = this.state.otp.fields;\n        otpFields.orderId = parseInt(this.props.match.params.id)\n        this.props.actions.verifyDeliveryOtp(otpFields);\n      })\n\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { verifyOtpStatus } = this.props;\n    if (verifyOtpStatus !== prevProps.verifyOtpStatus && verifyOtpStatus === symbols.STATUS_DONE) {\n      const params = {\n        entityId: parseInt(this.props.match.params.id),\n        eventName: 'delivery_complete'\n      }\n      this.props.actions.sendEvent(params);\n      this.props.history.replace('/success')\n    }\n    if (verifyOtpStatus !== prevProps.verifyOtpStatus && verifyOtpStatus === symbols.STATUS_FAIL) {\n      this.setState({ validationFailed: true })\n    }\n  }\n\n  render() {\n    const { resendDeliveryOtpStatus } = this.props;\n    return (\n      <div className=\"mt-2 fs-14 global-form\">\n        {\n          this.props.hasSentOTP &&\n          <div>\n            We have sent 6 digit otp to {this.props.phoneNumber}\n          </div>\n        }\n        <form onSubmit={(e) => this.onSubmitOTP(e)}>\n          <div className=\"input-field-wrap mt-4\">\n            {/* <Input\n              label=\"Enter OTP\"\n              type=\"text\"\n              name=\"otp\"\n              otp={'otp1'}\n              icon={this.state.validations.otp ? this.state.otp.errors.otp ? null : <Check/> : null}\n              iconColor=\"green\"\n              value={this.state.otp.fields.otp}\n              onBlur={(e) => this.beginValidation('otp', 'otp', e)}\n              errorMsg={this.state.validations.otp ? this.state.otp.errors.otp : null}\n              onChange={(e) => this.handleChange('otp', 'otp', e)}\n            /> */}\n            <OTPFieldComponent \n              digits={6} \n              onChange={(value) => this.handleChange('otp', 'otp', value)} \n              validateOTP={(value) => this.beginValidation('otp', 'otp', value)}\n              errorMsg={this.state.validations.otp ? this.state.otp.errors.otp : null}\n            />\n            {\n              this.state.validationFailed &&\n              <span> Wrong OTP</span>\n            }\n          </div>\n          <div className=\"btn-wrapper\">\n            <button type=\"submit\" className={this.state.allValidated ? \"btn btn-green\" : \"btn btn-disabled\"}>\n              {this.props.verifyOtpStatus === symbols.STATUS_BEGIN ? \"Verifying...\" : \"Verify OTP\"}\n            </button>\n          </div>\n          <React.Fragment>\n            {\n              this.props.hasSentOTP &&\n              <div className=\"btn-wrapper mt-4\">\n                Didn't receive OTP?\n                <br/>\n                {\n                  resendDeliveryOtpStatus === symbols.STATUS_BEGIN ? \n                  <span className=\"green-link\">Sending...</span> :\n                  <React.Fragment>\n                  <span className={this.state.resetSetTimeout ? `green-link disabled` : `green-link pointer` } onClick={() => this.resendOtp()}>Resend OTP</span>\n                  \n                  </React.Fragment>\n                }\n              </div>\n            }\n          </React.Fragment>\n          \n          <div className=\"mt-7\">\n            <div className=\"light-line\"/>\n            Merchant not available?\n            <br/>\n            <div className=\"green-link mt-1\" onClick={this.props.backToPhoneSelect}>Change Number</div>\n          </div>\n          {\n            this.props.errors && this.props.errors.error ?\n              <div className=\"error mt-1\">{this.props.errors.error.message}</div> : null\n          }\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(connect(\n  state => ({\n    verifyOtpError: state.statuses.verifyDeliveryOtp.error,\n    verifyOtpStatus: state.statuses.verifyDeliveryOtp.status,\n    resendDeliveryOtpStatus: state.statuses.resendDeliveryOtp.status,\n    resendDeliveryOtpError: state.statuses.resendDeliveryOtp.error\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(DeliveryOTPComponent));\n","import React, { Component } from 'react';\n\nimport HeaderComponent from '../headers/HeaderComponent';\nimport '../auth/auth.scss'\nimport PhoneListComponent from \"./PhoneListComponent\";\nimport DeliveryOTPComponent from \"./DeliveryOTPComponent\";\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nclass VerifyDeliveryComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasSentOTP: false,\n      phoneNo: null,\n      initialState: true\n    }\n  }\n\n  sendOtpDone(phoneNo) {\n    this.setState({ hasSentOTP: true, phoneNo: phoneNo, initialState: false })\n  }\n\n  backToPhoneSelect() {\n    this.setState({ hasSentOTP: false, phoneNo: null, initialState: false })\n  }\n\n  hashPhoneNumber(number) {\n    return (number[0] + number[1] + '******' + number[8] + number[9]);\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          !this.props.location.state ?\n            <div>\n              <CommonHeaderComponent title={\"VERIFY DELIVERY\"} enableBack={true}/>\n              <div className=\"pd-top-global fs-18 red-text center\">\n                Unauthorized!!!\n              </div>\n            </div>\n            :\n            <React.Fragment>\n              <CommonHeaderComponent title={`${this.props.location.state.orderNumber}`} enableBack={true}/>\n              <div className=\"order-top-header pd-top-global\">\n                {\n                  !this.state.hasSentOTP  && !this.state.initialState ?\n                    <div className={\"fs-14 align-left\"}>\n                      Select phone number to <b>receive OTP</b>\n                      <div className=\"light-line\" />\n                    </div> :\n                    <div>\n                      <div className=\"fs-24\">\n                        Enter Delivery OTP\n                      </div>\n                      <div className=\"fs-14 mt-1\">\n                        The OTP was shared with the merchant at the time of Order Placement\n                      </div>\n                    </div>\n                }\n              {!this.state.hasSentOTP && !this.state.initialState ?\n                <PhoneListComponent\n                  sendOtpDone={(phoneNo) => this.sendOtpDone(phoneNo)}\n                /> :\n                <DeliveryOTPComponent\n                  backToPhoneSelect={() => this.backToPhoneSelect()}\n                  phoneNumber={this.state.phoneNo}\n                  hasSentOTP={this.state.hasSentOTP}\n                />\n              }\n            </div>\n          </React.Fragment>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect()(VerifyDeliveryComponent));\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from \"../../actions/ordersAction\";\nimport * as symbols from \"../../operations/symbols\";\nimport { PhotoMainViewer } from '../core/PhotoViewerComponent';\nimport CommonHeaderComponent from \"../headers/CommonHeaderComponent\";\nimport PictureModeModal from '../core/PictureModeModal';\nimport LoaderComponent from '../core/LoaderComponent';\n\n\nclass InvoiceComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photos: [],\n      images: []\n    }\n  }\n\n  openPictureModeModal() {\n    this.setState({ openPictureModeModal: true })\n  }\n\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  setImages(files) {\n    this.closePictureModeModal();\n    const photos = [...this.state.photos];\n    for (let i = 0; i < files.length; i++) {\n      photos.push(files[i])\n    }\n    this.setState({ photos })\n  }\n\n  componentDidMount() {\n    this.props.actions.getOrderDetails(this.props.match.params.id);\n    if (this.props.location.state && this.props.orders && this.props.orders.invoiceImages[this.props.location.state.id]) {\n      const photos = [...this.props.orders.invoiceImages[this.props.location.state.id]]\n      this.setState({ photos })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { uploadImagesStatus, getOrdersStatus } = this.props;\n    if (uploadImagesStatus !== prevProps.uploadImagesStatus && uploadImagesStatus === symbols.STATUS_DONE) {\n      const params = {\n        entityId: parseInt(this.props.match.params.id),\n        eventName: 'verify_products_complete'\n      }\n      this.props.actions.sendEvent(params);\n      this.props.history.push({\n        pathname: `/order/${this.props.match.params.id}/verifyDelivery`,\n        state: { id: this.props.match.params.id, orderNumber: this.props.location.state.orderNumber }\n      })\n    }\n\n    if (getOrdersStatus !== prevProps.getOrdersStatus && getOrdersStatus === symbols.STATUS_DONE) {\n      let invoiceImages = this.props.orders.orderDetails.images.reduce((acc, ele) => {\n        if (ele.entityType === 'invoice') {\n          acc.push(ele)\n        }\n        return acc\n      }, [])\n      this.setState({ images: invoiceImages })\n    }\n  }\n\n  removeImage(e, currIndex) {\n    let photos = [...this.state.photos];\n    photos = photos.filter((ele, index) => {\n      if (currIndex !== index) {\n        return true\n      }\n    })\n    this.setState({ photos })\n  }\n\n  uploadInvocies() {\n    let payload = new FormData();\n    payload.append('orderId', this.props.location.state.id);\n    if (this.state.photos.length == 1) {\n      payload.append('files', this.state.photos[0]);\n    } else {\n      for (let i = 0; i < this.state.photos.length; i++) {\n        payload.append('files', this.state.photos[i]);\n      }\n    }\n\n    payload.append('latitude', 0);\n    payload.append('longitude', 0);\n    payload.append('imageType', \"invoice\");\n    this.props.actions.uploadImages(payload)\n  }\n\n  pushToVerify() {\n    if (this.state.photos.length > 0) {\n      let payload = new FormData();\n      payload.append('orderId', this.props.location.state.id);\n      if (this.state.photos.length == 1) {\n        payload.append('files', this.state.photos[0]);\n      } else {\n        for (let i = 0; i < this.state.photos.length; i++) {\n          payload.append('files', this.state.photos[i]);\n        }\n      }\n      payload.append('latitude', 0);\n      payload.append('longitude', 0);\n      payload.append('imageType', \"invoice\");\n      this.props.actions.uploadImages(payload)\n    } else {\n      const params = {\n        entityId: parseInt(this.props.match.params.id),\n        eventName: 'verify_products_complete'\n      }\n      this.props.actions.sendEvent(params);\n      this.props.history.push({\n        pathname: `/order/${this.props.match.params.id}/verifyDelivery`,\n        state: { id: this.props.match.params.id, orderNumber: this.props.location.state.orderNumber }\n      })\n    }\n  }\n\n  render() {\n    const {\n      openPictureModeModal,\n      closePictureModeModal\n    } = this.state;\n\n    const { getOrdersStatus } = this.props;\n\n    if (!this.props.location.state) {\n      return (\n        <React.Fragment>\n          <CommonHeaderComponent title={`Invoice`} enableBack={true}/>\n          <div className=\"pd-top-global fs-18 red-text center\">\n            Unauthorized!!!\n          </div>\n        </React.Fragment>\n      )\n    }\n    return (\n      <div className=\"pd-top-global gray-wrap mh-100\">\n        {/*Open modal for picture click*/}\n        <PictureModeModal\n          isOpen={openPictureModeModal}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          hasSameRoute={true}\n          default={true}\n          hasNotWrapper={true}\n          setImages={(files) => this.setImages(files)}\n        />\n        <CommonHeaderComponent title={`Invoice - ${this.props.location.state.id}`} enableBack={true}/>\n        <div className=\"order-top-header fs-14\">\n            <div className=\"subtitle\">\n              <b>Uploaded Invoices</b>\n            </div>\n            {\n              getOrdersStatus == symbols.STATUS_BEGIN ? \n              <LoaderComponent /> : null\n            }\n            {\n              this.state.images\n              && this.state.images.length > 0 &&\n              <div className=\"order-photos \">\n                <PhotoMainViewer\n                  parentClass=\"order-photo-wrapper\"\n                  className=\"order-photo-ele \"\n                  photos={this.state.images}\n                  id={this.props.location.state.id}\n                />\n              </div>\n            }\n          <div className=\"order-photos mt-2\">\n            {/*<div className=\"subtitle\">*/}\n            {/*  <b>Add Photos</b>*/}\n            {/*</div>*/}\n            <div className=\"horizontal-scroll\">\n            \n            <div className=\"order-photo-wrapper\">\n              <div \n                className=\"gallery-item order-photo-ele order-photo-placeholder\"\n                onClick={() => this.openPictureModeModal()}\n              >\n                <FontAwesomeIcon icon=\"camera\" />\n              </div>\n            </div>\n            {\n              this.state.photos && this.state.photos.map((ele, index) => {\n                return(\n                  <div className=\"order-photo-wrapper\">\n                      <div className=\"cross-image\" onClick={(e) => this.removeImage(e, index)}>\n                          <FontAwesomeIcon icon=\"times\" />\n                      </div>\n                      <div className={`gallery-item order-photo-ele`} style={{'backgroundImage': 'url('+URL.createObjectURL(ele)+')'}}></div>\n                  </div>\n                )     \n              })\n            }\n            </div>\n            <div className=\"fixed-verify-section z-highest order-card\">\n            {\n              this.state.images.length == 0 ? <React.Fragment>\n              {\n                this.props.uploadImagesStatus == symbols.STATUS_BEGIN ?\n                <div className=\"btn btn-green btn-expand\"><FontAwesomeIcon icon=\"spinner\" className=\"animate-spinner\" /></div> :\n                <div className={this.state.photos && this.state.photos.length > 0 ? \"btn btn-green btn-expand \" : \"btn btn-expand  btn-disabled\"} onClick={() => this.uploadInvocies()}>Upload invoice</div>\n                \n              }\n              </React.Fragment> :\n              <React.Fragment>\n              {\n                this.props.uploadImagesStatus == symbols.STATUS_BEGIN ?\n                <div className=\"btn btn-green btn-expand\"><FontAwesomeIcon icon=\"spinner\" className=\"animate-spinner\" /></div> :\n                <div className=\"btn btn-green btn-expand \" onClick={() => this.pushToVerify()}>Upload invoice</div>\n              }\n              </React.Fragment>\n              \n            }\n            </div>\n            {\n              this.props.uploadImagesStatus == symbols.STATUS_FAIL && this.props.uploadImagesError && <div className=\"red-text mt-2\">{this.props.uploadImagesError.error.message}</div>\n            }\n\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    getOrdersStatus: state.statuses.getOrderDetails.status,\n    getOrdersError: state.statuses.getOrderDetails.error,\n    uploadImagesStatus: state.statuses.uploadImages.status,\n    uploadImagesError: state.statuses.uploadImages.errors,\n    orders: state.orders,\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(InvoiceComponent));\n","import React, { Component } from 'react';\nimport './success.scss';\n\nclass SuccessComponent extends Component {\n\n  render() {\n    return (\n      <div className=\"success-tick-wrapper\">\n        <svg id=\"successAnimation\" className=\"animated\" xmlns=\"http://www.w3.org/2000/svg\" width=\"160\" height=\"160\"\n             viewBox=\"0 0 70 70\">\n          <path id=\"successAnimationResult\" fill=\"#D8D8D8\"\n                d=\"M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z\"/>\n          <circle id=\"successAnimationCircle\" cx=\"35\" cy=\"35\" r=\"24\" stroke=\"#979797\" strokeWidth=\"2\"\n                  strokeLinecap=\"round\" fill=\"transparent\"/>\n          <polyline id=\"successAnimationCheck\" stroke=\"#979797\" strokeWidth=\"2\" points=\"23 34 34 43 47 27\"\n                    fill=\"transparent\"/>\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport default SuccessComponent;\n","import React, { Component } from 'react';\nimport SuccessComponent from \"../core/SuccesComponent\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\n// Static page\n\nclass DeliverySuccessComponent extends Component {\n  render() {\n    return (\n      <div className=\"success-container\" onClick={() => this.props.history.push('/orders')}>\n        <div className=\"green-text fs-24 z-highest\"><b>Successfully Delivered</b></div>\n        <SuccessComponent/>\n        <div className=\"green-text fs-22 z-highest\">Tap to continue</div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect()(DeliverySuccessComponent));\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../../actions/ordersAction';\nimport * as symbols from '../../operations/symbols';\nimport { getBase64 } from '../../operations/operations';\nimport LoaderComponent from '../core/LoaderComponent';\n\n\nclass ConfirmationModal extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  handleImageInputClick(type) {\n    document.getElementById(type).click((e) => {})\n  }\n\n  componentDidMount() {\n    if (!this.props.orders.deliveryReasons)\n      this.props.actions.getAllDeliveryIssueReasons('deliveryIssue');\n  }\n\n  goToReasonPage(id) {\n    this.props.history.push(`/`)\n  }\n\n  renderReasonList() {\n    const { orders } = this.props;\n    return (\n      <React.Fragment>\n        We will inform the Hyperpure team that you have cancelled the delivery.\n        {\n          this.props.error && \n          <div className=\"red-text\">{this.props.error ? this.props.error.message : null}</div>\n        }\n        {\n          this.props.openLoader ? <LoaderComponent /> :\n          <React.Fragment>\n            <div className=\"btn btn-expand btn-red mt-2\" onClick={this.props.cancelOrderDelivery}>Confirm cancellation</div>\n            <div className=\"btn btn-expand btn-transparent mt-1\" onClick={this.props.closeConfirmationModal}>Go back</div>\n          </React.Fragment>\n        }\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const { isOpen, status, orders } = this.props;\n    if (isOpen) {\n      return (\n        <div className=\"modal\">\n          <div className=\"modal-overlay modal-picture\">\n            <div className=\"modal-title align-left\">\n              Confirm cancellation\n              <FontAwesomeIcon icon=\"times\" className=\"right\" onClick={this.props.closeConfirmationModal}/>\n            </div>\n            <div className=\"light-line\" />\n            {\n              <div className=\"modal-body align-left\">\n                {this.renderReasonList()}\n              </div>\n            }\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    errors: state.statuses.getDeliveryIssueReasons.errors,\n    status: state.statuses.getDeliveryIssueReasons.status,\n    orders: state.orders\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(ConfirmationModal));\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as actions from '../../actions/ordersAction';\nimport * as symbols from '../../operations/symbols';\nimport { getBase64 } from '../../operations/operations';\nimport LoaderComponent from '../core/LoaderComponent';\n\n\nclass IssueConfirmedModal extends Component {\n\n  render() {\n    const { isOpen } = this.props;\n\n    if (isOpen) {\n      return (\n        <div className=\"modal\">\n          <div className=\"modal-overlay modal-picture\">\n            <div className=\"modal-title align-left\">\n                Delivery Cancelled.\n            </div>\n            <div className=\"light-line\" />\n               <div className=\"modal-body align-left\">\n                <div className=\"flex\">\n                  <img src=\"../../../../../images/orderbag.png\" />\n                  <span className=\"ml-1\"> We have sent your message to inform the Hyperpure team that you <b>can't deliver</b> this order</span>\n              </div>\n              <div className=\"btn btn-green btn-expand mt-2 mb-1\" onClick={() => this.props.history.push('/')}>Go back to orders</div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default IssueConfirmedModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport CommonHeaderComponent from '../headers/CommonHeaderComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PictureModeModal from '../core/PictureModeModal';\nimport ConfirmationModal from '../core/ConfirmationModal';\nimport IssueConfirmedModal from '../core/IssueConfirmedModal';\nimport * as symbols from '../../operations/symbols';\nimport * as actions from '../../actions/ordersAction';\nimport './reason.scss';\n\nconst storeCloseReason = \"storeClose\";\nconst storeNotFoundReason = \"storeNotFound\";\nconst otherReason = \"others\";\n\nclass ReasonList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reasonsList: {},\n      currentOrder: null,\n      reasonListModel: [{\n          subtype: storeCloseReason,\n          type: ['contact', 'photo'],\n          contactMessage: '<b>Call restaurant</b> to confirm it is closed',\n          photoMessage: \"<b> Incase they do not respond</b><br />Take a selfie outside the restaurant to confirm that it's closed.\"\n        },\n        {\n          subtype: storeNotFoundReason,\n          type: ['contact', 'cancel'],\n          contactMessage: 'Check that you are at the right restaurant',\n          cancelMessage: '<b> Or</b><br />Confirm that you want to <b>cancel this order</b>'\n        },\n        {\n          subtype: otherReason,\n          type: ['comments'],\n          commentMessage: 'Please write to us explainging your issue in detail, to <span class=\"red-text\">cancel delivery</span> of this order'\n        }\n      ],\n      openPictureModeModal: false,\n      openDoneModal: false,\n      openLoader: false,\n      openConfirmationModal: false,\n      commentMessage: ''\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.orders.deliveryReasons) {\n      this.props.history.push('/');\n      return\n    }\n\n    const orderId = this.props.match.params.orderId;\n\n    let reasonsList = this.props.orders.deliveryReasons.reduce((acc, ele) => {\n      acc[ele.id] = ele.name;\n      return acc\n    }, {})\n\n    const currentOrder = this.props.orders && this.props.orders.orders.reduce((acc, ele, index) => {\n      if (ele.orderId == orderId) {\n        acc = ele\n      }\n      return acc\n\n    }, {})\n    this.setState({ reasonsList, currentOrder });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { cancelDeliveryIssueStatus } = this.props;\n    if (cancelDeliveryIssueStatus !== prevProps.cancelDeliveryIssueStatus && (cancelDeliveryIssueStatus === symbols.STATUS_DONE)) {\n      const params = {\n        entityId: parseInt(this.props.match.params.orderId),\n        eventName: 'cancellation_complete'\n      }\n      this.props.actions.sendEvent(params);\n      this.setState({ openDoneModal: true, openPictureModeModal: false, openConfirmationModal: false })\n    }\n\n    if (cancelDeliveryIssueStatus !== prevProps.cancelDeliveryIssueStatus && (cancelDeliveryIssueStatus === symbols.STATUS_FAIL)) {\n      this.setState({ openLoader: false })\n    }\n  }\n\n\n  renderContactCard(reasonType, ele) {\n    if (this.state.currentOrder) {\n      return (\n        <div className=\"contact-card\">\n          <span className=\"try\">Try this 👉</span>\n          <br/>\n          <span dangerouslySetInnerHTML={{ __html: ele.contactMessage }}></span>\n          {\n            reasonType == storeNotFoundReason &&\n            <b>&nbsp; {this.state.currentOrder && this.state.currentOrder.outletAddress}</b>\n          }\n          {\n            this.state.currentOrder.phones.length > 0 &&\n            <a href={`tel:${this.state.currentOrder.phones[this.state.currentOrder.phones.length - 1].phoneNumber}`}>\n              <div className=\"btn btn-green btn-expand btn-normal mt-2\"><FontAwesomeIcon className=\"reverse\" icon=\"phone\" />&nbsp; Call restaurant</div>\n            </a>\n          }\n        </div>\n      )\n    }\n    return\n  }\n\n  // Modal operations\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  openPictureModeModal() {\n    this.setState({ openPictureModeModal: true })\n  }\n\n\n  // Modal operations\n  closeConfirmationModal() {\n    this.setState({ openConfirmationModal: false })\n  }\n\n  openConfirmationModal() {\n    this.setState({ openConfirmationModal: true })\n  }\n\n  // cancel delivery\n  cancelOrderDelivery(type) {\n    const reasonId = this.props.match.params.reasonId;\n    const orderId = this.props.match.params.orderId;\n    const params = new FormData();\n    params.append('reasonId', reasonId);\n    if (this.state.commentMessage !== '') {\n      params.append('comment', this.state.commentMessage);\n    }\n    this.setState({ openLoader: true })\n    this.props.actions.cancelOrderDelivery(orderId, params);\n  }\n\n  componentWillUnmount() {\n    this.props.actions.resetCancelDeliverySatuses();\n  }\n\n  render() {\n    const { orders } = this.props;\n    const reasonId = this.props.match.params.reasonId;\n    const reasonType = this.props.match.params.reasonType;\n    const orderId = this.props.match.params.orderId;\n    const { reasonsList, openPictureModeModal, closePictureModeModal, openConfirmationModal, openDoneModal } = this.state;\n\n    return (\n      <div className=\"hp-container pd-top-global\">\n        <CommonHeaderComponent\n          enableBack={true}\n          icon={'times'}\n          title={Object.keys(reasonsList).length > 0 && reasonsList[reasonId]}\n        />\n        <PictureModeModal\n          isOpen={openPictureModeModal}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          id={reasonId}\n          type=\"reason\"\n          redirectedURL={`/order/${orderId}/reason/${reasonId}/${reasonType}/photo`}\n        />\n        <ConfirmationModal\n          isOpen={openConfirmationModal}\n          closeConfirmationModal={() => this.closeConfirmationModal()}\n          cancelOrderDelivery={() => this.cancelOrderDelivery()}\n          openLoader={this.state.openLoader}\n          error={this.props.cancelDeliveryIssueError ? this.props.cancelDeliveryIssueError.error : null}\n        />\n        <IssueConfirmedModal\n          history={this.props.history}\n          isOpen={openDoneModal}\n        />\n        <div className=\"reason-wrapper\">\n        {this.state.reasonListModel.map((ele, index) => {\n          if(ele.subtype == reasonType){\n            return(\n              <React.Fragment>\n                {\n                  ele.type.map((typeEle, index) => {\n                    return(\n                      <div className=\"reason-card\">\n                        {\n                          typeEle == 'contact' && this.renderContactCard(reasonType, ele)\n                        }\n                        {\n                          typeEle == 'photo' &&\n                          <div className=\"photo-card\">\n                            <div dangerouslySetInnerHTML={{ __html: ele.photoMessage }}></div>\n                            <div className=\"center relative\">\n                              <h5 className=\"gray-text\">Sample Photo </h5>\n                              <img src=\"../../../../images/sample.png\"/>\n                              <img src=\"../../../../images/Ellipse.png\" className=\"absolute-sample\"/>\n                            </div>\n                            <div className=\"btn btn-transparent-green btn-expand btn-normal mt-2\" onClick={() => this.openPictureModeModal()}><FontAwesomeIcon icon=\"camera\" />&nbsp; Click photo</div>\n                          </div>\n                        }\n                        {\n                          typeEle == 'cancel' &&\n                          <div className=\"contact-card\">\n                          <div dangerouslySetInnerHTML={{ __html: ele.cancelMessage }}></div>\n                            \n                            <div className=\"btn btn-transparent-red btn-expand btn-normal mt-2\" onClick={() => this.openConfirmationModal()}>Cancel Delivery</div>\n                          </div>\n                        }\n                        {\n                          typeEle == 'comments' &&\n                          <div className=\"contact-card\">\n                            <div dangerouslySetInnerHTML={{ __html: ele.commentMessage }}></div>\n                            <form className=\"mt-2\">\n                              <textarea placeholder=\"Add Issue\" value={this.state.commentMessage} onChange={(e) => this.setState({commentMessage: e.target.value })}></textarea>\n                              <div \n                                className={this.state.commentMessage.trim() === '' ? \"btn-disabled btn btn-green btn-expand btn-normal mt-1\" : \"btn btn-green btn-expand btn-normal mt-1\"}\n                                onClick={() => this.openConfirmationModal()}\n                              >\n                                Cancel Delivery\n                              </div>\n                            </form>\n                          </div>\n                        }\n                      </div>\n                    )\n                  })\n                }\n                Incase of any issue feel free to <span className=\"blue-text\"><FontAwesomeIcon icon=\"phone\" className=\"reverse\" /> <a href={`tel:+911171565093`}>Call us</a></span>\n              </React.Fragment>\n            )\n          }\n        })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    cancelDeliveryIssueStatus: state.statuses.cancelDeliveryIssue.status,\n    cancelDeliveryIssueError: state.statuses.cancelDeliveryIssue.errors,\n    orders: state.orders\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch),\n  }),\n)(ReasonList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport CommonHeaderComponent from '../headers/CommonHeaderComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PictureModeModal from '../core/PictureModeModal';\nimport ConfirmationModal from '../core/ConfirmationModal';\nimport IssueConfirmedModal from '../core/IssueConfirmedModal';\nimport * as actions from '../../actions/ordersAction';\nimport * as symbols from '../../operations/symbols';\nimport { PhotoViewer, PhotoMainViewer } from '../core/PhotoViewerComponent';\nimport './reason.scss';\n\nclass ReasonListPhotoView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reasonsList: {},\n      currentOrder: null,\n      openPictureModeModal: false,\n      reasonImages: [],\n      openDoneModal: false,\n      openLoader: false,\n      openConfirmationModal: false\n    }\n  }\n\n  openPictureModeModal() {\n    this.setState({ openPictureModeModal: true })\n  }\n\n  closePictureModeModal() {\n    this.setState({ openPictureModeModal: false })\n  }\n\n  componentDidUpdate(prevProps) {\n    const reasonId = this.props.match.params.reasonId;\n    const { cancelDeliveryIssueStatus } = this.props;\n    if (!prevProps.orders.reasonImages[reasonId] && JSON.stringify(prevProps.orders.reasonImages[reasonId]) != JSON.stringify(this.props.orders.reasonImages[reasonId])) {\n      this.setState({ reasonImages: [...this.state.reasonImages, ...this.props.orders.reasonImages[reasonId]] }, () => {\n        this.props.actions.resetOrderDetailImages();\n      })\n    }\n\n    if (cancelDeliveryIssueStatus !== prevProps.cancelDeliveryIssueStatus && (cancelDeliveryIssueStatus === symbols.STATUS_DONE)) {\n      this.setState({ openDoneModal: true, openPictureModeModal: false, openConfirmationModal: false })\n    }\n\n    if (cancelDeliveryIssueStatus !== prevProps.cancelDeliveryIssueStatus && (cancelDeliveryIssueStatus === symbols.STATUS_FAIL)) {\n      this.setState({ openLoader: false })\n    }\n\n\n  }\n\n  componentDidMount() {\n    if (!this.props.orders.deliveryReasons) {\n      this.props.history.push('/');\n      return\n    }\n\n\n    const orderId = this.props.match.params.orderId;\n    const reasonId = this.props.match.params.reasonId;\n\n    let reasonsList = this.props.orders.deliveryReasons.reduce((acc, ele) => {\n      acc[ele.id] = ele.name;\n      return acc\n    }, {})\n\n    const currentOrder = this.props.orders && this.props.orders.orders.reduce((acc, ele, index) => {\n      if (ele.orderId == orderId) {\n        acc = ele\n      }\n      return acc\n\n    }, {})\n    this.setState({ reasonsList, currentOrder, reasonImages: this.props.orders.reasonImages[reasonId] }, () => {\n      this.props.actions.resetOrderDetailImages();\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.actions.resetOrderDetailImages();\n  }\n\n  removeImage(e, currIndex) {\n    let reasonImages = [...this.state.reasonImages];\n    reasonImages = reasonImages.filter((ele, index) => {\n      if (currIndex !== index) {\n        return true\n      }\n    })\n    this.setState({ reasonImages })\n  }\n\n  handleOnSubmit() {\n    alert('')\n  }\n\n\n  // Modal operations\n  closeConfirmationModal() {\n    this.setState({ openConfirmationModal: false })\n  }\n\n  openConfirmationModal() {\n    this.setState({ openConfirmationModal: true })\n  }\n\n  // cancel delivery\n  cancelOrderDelivery() {\n    const reasonId = this.props.match.params.reasonId;\n    const orderId = this.props.match.params.orderId;\n    const params = new FormData();\n    for (let i in this.state.reasonImages) {\n      params.append('files', this.state.reasonImages[i])\n    }\n    params.append('reasonId', reasonId);\n    this.setState({ openLoader: true })\n    this.props.actions.cancelOrderDelivery(orderId, params);\n  }\n\n\n  render() {\n    const { orders } = this.props;\n    const reasonId = this.props.match.params.reasonId;\n    const orderId = this.props.match.params.orderId;\n    const { reasonsList, openPictureModeModal, openConfirmationModal, openDoneModal } = this.state;\n\n    return (\n      <div className=\"hp-container pd-top-global\">\n        <CommonHeaderComponent\n          enableBack={true}\n          icon={'times'}\n          title={Object.keys(reasonsList).length > 0 && reasonsList[reasonId]}\n        />\n        <PictureModeModal\n          isOpen={openPictureModeModal}\n          closePictureModeModal={() => this.closePictureModeModal()}\n          hasSameRoute={true}\n          id={reasonId}\n          type=\"reason\"\n        />\n        <ConfirmationModal\n          isOpen={openConfirmationModal}\n          closeConfirmationModal={() => this.closeConfirmationModal()}\n          cancelOrderDelivery={() => this.cancelOrderDelivery()}\n          openLoader={this.state.openLoader}\n          error={this.props.cancelDeliveryIssueError ? this.props.cancelDeliveryIssueError.error : null}\n        />\n        <IssueConfirmedModal\n          history={this.props.history}\n          isOpen={openDoneModal}\n        />\n        <div className=\"reason-photo-wrapper order-top-header\">\n          <div className=\"order-photos\">\n            <div className=\"subtitle\">\n              <b>Add Photos</b>\n            </div>\n            <div className=\"horizontal-scroll\">\n            <div className=\"order-photo-wrapper\">\n              <div \n                className=\"gallery-item order-photo-ele order-photo-placeholder\"\n                onClick={() => this.openPictureModeModal()}\n              >\n                  <FontAwesomeIcon icon=\"camera\" />\n              </div>\n            </div>\n            \n            {\n              this.state.reasonImages && this.state.reasonImages.map((ele, index) => {\n                return(\n                  <div className=\"order-photo-wrapper\">\n                      <div className=\"cross-image\" onClick={(e) => this.removeImage(e, index)}>\n                          <FontAwesomeIcon icon=\"times\" />\n                      </div>\n                      <div className={`gallery-item order-photo-ele`} style={{'backgroundImage': 'url('+URL.createObjectURL(ele)+')'}}>\n                    </div>\n                  </div>\n                )     \n              })\n            }\n            </div>\n          </div>\n        </div>\n\n         <div className=\"order-card fixed-verify-section z-highest flex-column\">\n            <div className=\"mb-2\">We will inform hyperpure that the <b>restaurant is closed</b></div>\n            <div\n              className={this.state.reasonImages.length > 0 ? \"btn btn-expand btn-green\" : \"btn btn-expand btn-disabled\"}\n              onClick={() => this.openConfirmationModal()}\n            >\n              Send for approval\n            </div>\n          </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => ({\n    cancelDeliveryIssueStatus: state.statuses.cancelDeliveryIssue.status,\n    cancelDeliveryIssueError: state.statuses.cancelDeliveryIssue.errors,\n    orders: state.orders\n  }),\n  dispatch => ({\n    actions: bindActionCreators(actions, dispatch)\n  }),\n)(ReasonListPhotoView));\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport PrivateRoute from './core/PrivateRoute';\n\nimport HomeComponent from './home/HomeComponent';\nimport AuthComponent from './auth/AuthComponent';\nimport CODComponent from './order/CODComponent'\nimport OrdersComponent from './order/OrdersComponent';\nimport OrderDetailComponent from './order/OrderDetailComponent';\nimport OrderProductsComponent from './order/OrderProductsComponent'\nimport VerifyOrderComponent from './order/VerifyOrderComponent'\nimport { faBars, faMinus, faCamera, faImages, faBell, faSpinner, faCompass, faPlus, faEdit, faUser, faTag, faPhone, faScroll, faSearch, faTimes, faChevronCircleLeft, faChevronCircleRight, faCheck, faBan, faChevronRight, faChevronUp, faChevronDown, faChevronLeft, faTrash, faFilter, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport PhoneListComponent from \"./order/PhoneListComponent\";\nimport VerifyDeliveryComponent from \"./order/VerifyDeliveryComponent\";\nimport InvoiceComponent from \"./order/InvoiceComponent\";\nimport SuccessComponent from \"./core/SuccesComponent\";\nimport DeliverySuccessComponent from \"./order/DeliverySuccessComponent\";\nimport ReasonList from \"./reasonList\";\nimport ReasonListPhotoView from \"./reasonList/ReasonListPhotoView\";\nimport OTPComponent from './auth/OTPComponent';\n\nlibrary.add(faBars,\n  faPlus,\n  faMinus,\n  faEdit,\n  faCompass,\n  faUser,\n  faTag,\n  faSearch,\n  faPhone,\n  faScroll,\n  faTimes,\n  faChevronCircleLeft,\n  faChevronCircleRight,\n  faCheck,\n  faBan,\n  faChevronRight,\n  faChevronDown,\n  faChevronUp,\n  faChevronLeft,\n  faTrash,\n  faBell,\n  faFilter,\n  faCamera,\n  faImages,\n  faAngleDown,\n  faSpinner);\n\nclass AppComponent extends Component {\n\n  state = {\n    offline: !navigator.onLine\n  }\n\n  setOfflineStatus = () => {\n    this.setState({ offline: !navigator.onLine });\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('online', this.setOfflineStatus)\n    window.addEventListener('offline', this.setOfflineStatus)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('online', this.setOfflineStatus)\n    window.removeEventListener('offline', this.setOfflineStatus)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {\n          this.state.offline && <div className=\"offline-msg fs-14\">Please connect to internet!</div>\n        }\n        <Switch>\n          <PrivateRoute exact path=\"/orders\" render={() => <OrdersComponent />} />\n          <PrivateRoute exact path=\"/order/:id\" render={() => <OrderDetailComponent />} />\n          <PrivateRoute exact path=\"/order/:id/products\" render={() => <OrderProductsComponent />} />\n          <PrivateRoute exact path=\"/order/:id/verify\" render={() => <VerifyOrderComponent />} />\n          <PrivateRoute exact path=\"/order/:id/invoice\" render={() => <InvoiceComponent />} />\n          <PrivateRoute exact path=\"/order/:id/verifyDelivery\" render={() => <VerifyDeliveryComponent />}/>\n          <PrivateRoute exact path=\"/order/:id/cod\" render={()=> <CODComponent />}/>\n          <PrivateRoute exact path=\"/order/:orderId/reason/:reasonId/:reasonType\" render={()=> <ReasonList />}/>\n          <PrivateRoute exact path=\"/order/:orderId/reason/:reasonId/:reasonType/photo\" render={()=> <ReasonListPhotoView />}/>\n          <PrivateRoute exact path=\"/success\" render={()=><DeliverySuccessComponent />}/>\n          {/* <PrivateRoute reverse={true} path=\"/\" render={() => <AuthComponent />} /> */}\n          <PrivateRoute reverse={true} path=\"/\" render={() => <OTPComponent />} />\n        </Switch>\n      </React.Fragment>\n    )\n  }\n\n}\n\nexport default AppComponent;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/store'\nimport './index.scss';\nimport ScrollToTop from './operations/scroll/ScrollToTop';\nimport * as serviceWorker from './serviceWorker';\nimport AppComponent from './components/AppComponent';\nimport {\n  BreadcrumbsProvider\n} from 'react-breadcrumbs-dynamic'\n\n// Adding intial state for authentication\nlet initialState = {\n  auth: {\n    token: null,\n    isAuthenticated: false,\n    user: null\n  },\n};\n\nif (window.localStorage.getItem('token')) {\n  initialState.auth.isAuthenticated = true;\n  initialState.auth.token = window.localStorage.getItem('token');\n  if (window.localStorage.getItem('user')) {\n    initialState.auth.user = JSON.parse(window.localStorage.getItem('user'));\n  }\n}\nlet store = configureStore(initialState);\nrender(\n  <Provider store={store}>\n\t\t<Router basename=\"/\">\n\t\t  <ScrollToTop>\n\t\t  \t<BreadcrumbsProvider>\n\t\t\t\t<AppComponent />\n\t\t\t</BreadcrumbsProvider>\n\t\t  </ScrollToTop>\n\t\t</Router>\n\t</Provider>, document.getElementById('root')\n);\n\n// Register service worker\nserviceWorker.unregister();\n"],"sourceRoot":""}